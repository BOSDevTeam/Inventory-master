

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Inventory
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class InventoryDBEntities : DbContext
{
    public InventoryDBEntities()
        : base("name=InventoryDBEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<S_AdjustType> S_AdjustType { get; set; }

    public virtual DbSet<S_Bank> S_Bank { get; set; }

    public virtual DbSet<S_BankPayment> S_BankPayment { get; set; }

    public virtual DbSet<S_Branch> S_Branch { get; set; }

    public virtual DbSet<S_Customer> S_Customer { get; set; }

    public virtual DbSet<S_Location> S_Location { get; set; }

    public virtual DbSet<S_MainMenu> S_MainMenu { get; set; }

    public virtual DbSet<S_ProductBranch> S_ProductBranch { get; set; }

    public virtual DbSet<S_ProductUnit> S_ProductUnit { get; set; }

    public virtual DbSet<S_ProductVariant> S_ProductVariant { get; set; }

    public virtual DbSet<S_SlipID> S_SlipID { get; set; }

    public virtual DbSet<S_SubMenu> S_SubMenu { get; set; }

    public virtual DbSet<S_Supplier> S_Supplier { get; set; }

    public virtual DbSet<S_Township> S_Township { get; set; }

    public virtual DbSet<S_Unit> S_Unit { get; set; }

    public virtual DbSet<S_User> S_User { get; set; }

    public virtual DbSet<S_UserRightEntry> S_UserRightEntry { get; set; }

    public virtual DbSet<S_UserRightReport> S_UserRightReport { get; set; }

    public virtual DbSet<S_UserRightSetup> S_UserRightSetup { get; set; }

    public virtual DbSet<S_VoucherFormat> S_VoucherFormat { get; set; }

    public virtual DbSet<S_VoucherSetting> S_VoucherSetting { get; set; }

    public virtual DbSet<Sys_Admin> Sys_Admin { get; set; }

    public virtual DbSet<Sys_Currency> Sys_Currency { get; set; }

    public virtual DbSet<Sys_EntryModule> Sys_EntryModule { get; set; }

    public virtual DbSet<Sys_MainModule> Sys_MainModule { get; set; }

    public virtual DbSet<Sys_Payment> Sys_Payment { get; set; }

    public virtual DbSet<Sys_PayMethod> Sys_PayMethod { get; set; }

    public virtual DbSet<Sys_ProductNature> Sys_ProductNature { get; set; }

    public virtual DbSet<Sys_ReportModule> Sys_ReportModule { get; set; }

    public virtual DbSet<Sys_SetupModule> Sys_SetupModule { get; set; }

    public virtual DbSet<Sys_ShopType> Sys_ShopType { get; set; }

    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<T_Delivery> T_Delivery { get; set; }

    public virtual DbSet<T_DeliveryHistory> T_DeliveryHistory { get; set; }

    public virtual DbSet<T_TranSaleReturn> T_TranSaleReturn { get; set; }

    public virtual DbSet<Temp_Delivery> Temp_Delivery { get; set; }

    public virtual DbSet<Temp_ProductVariant> Temp_ProductVariant { get; set; }

    public virtual DbSet<xSys_AppWord> xSys_AppWord { get; set; }

    public virtual DbSet<xSys_Language> xSys_Language { get; set; }

    public virtual DbSet<xSys_MainLanguage> xSys_MainLanguage { get; set; }

    public virtual DbSet<S_Division> S_Division { get; set; }

    public virtual DbSet<T_CLTranSaleOrder> T_CLTranSaleOrder { get; set; }

    public virtual DbSet<T_MasterSale> T_MasterSale { get; set; }

    public virtual DbSet<T_TranSale> T_TranSale { get; set; }

    public virtual DbSet<S_TranID> S_TranID { get; set; }

    public virtual DbSet<Sys_UnitLevel> Sys_UnitLevel { get; set; }

    public virtual DbSet<T_CLMasterSaleOrder> T_CLMasterSaleOrder { get; set; }

    public virtual DbSet<S_CompanySetting> S_CompanySetting { get; set; }

    public virtual DbSet<S_Product> S_Product { get; set; }


    public virtual int PrcDeleteBank(Nullable<int> bankID)
    {

        var bankIDParameter = bankID.HasValue ?
            new ObjectParameter("BankID", bankID) :
            new ObjectParameter("BankID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDeleteBank", bankIDParameter);
    }


    public virtual int PrcDeleteBankPayment(Nullable<int> bankPaymentID)
    {

        var bankPaymentIDParameter = bankPaymentID.HasValue ?
            new ObjectParameter("BankPaymentID", bankPaymentID) :
            new ObjectParameter("BankPaymentID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDeleteBankPayment", bankPaymentIDParameter);
    }


    public virtual ObjectResult<PrcGetCompanySetting_Result> PrcGetCompanySetting()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCompanySetting_Result>("PrcGetCompanySetting");
    }


    public virtual ObjectResult<PrcGetLocation_Result> PrcGetLocation()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetLocation_Result>("PrcGetLocation");
    }


    public virtual ObjectResult<PrcGetMasterSaleByTranID_Result> PrcGetMasterSaleByTranID(Nullable<int> tranID)
    {

        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetMasterSaleByTranID_Result>("PrcGetMasterSaleByTranID", tranIDParameter);
    }


    public virtual ObjectResult<PrcGetMasterSaleList_Result> PrcGetMasterSaleList()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetMasterSaleList_Result>("PrcGetMasterSaleList");
    }


    public virtual ObjectResult<PrcGetMasterSaleOrderByTranID_Result> PrcGetMasterSaleOrderByTranID(Nullable<int> tranID)
    {

        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetMasterSaleOrderByTranID_Result>("PrcGetMasterSaleOrderByTranID", tranIDParameter);
    }


    public virtual ObjectResult<PrcGetMasterSaleOrderList_Result> PrcGetMasterSaleOrderList()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetMasterSaleOrderList_Result>("PrcGetMasterSaleOrderList");
    }


    public virtual ObjectResult<PrcGetMasterSaleReturnByTranID_Result> PrcGetMasterSaleReturnByTranID(Nullable<int> tranID)
    {

        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetMasterSaleReturnByTranID_Result>("PrcGetMasterSaleReturnByTranID", tranIDParameter);
    }


    public virtual ObjectResult<PrcGetMasterSaleReturnList_Result> PrcGetMasterSaleReturnList()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetMasterSaleReturnList_Result>("PrcGetMasterSaleReturnList");
    }


    public virtual ObjectResult<PrcGetProduct_Result> PrcGetProduct()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetProduct_Result>("PrcGetProduct");
    }


    public virtual ObjectResult<PrcGetProductUnitByProductID_Result> PrcGetProductUnitByProductID(Nullable<int> productID)
    {

        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetProductUnitByProductID_Result>("PrcGetProductUnitByProductID", productIDParameter);
    }


    public virtual ObjectResult<PrcGetSubMenu_Result> PrcGetSubMenu()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetSubMenu_Result>("PrcGetSubMenu");
    }


    public virtual ObjectResult<PrcGetTempProductUnit_Result> PrcGetTempProductUnit()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTempProductUnit_Result>("PrcGetTempProductUnit");
    }


    public virtual ObjectResult<PrcGetTranSaleByTranID_Result> PrcGetTranSaleByTranID(Nullable<int> tranID)
    {

        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTranSaleByTranID_Result>("PrcGetTranSaleByTranID", tranIDParameter);
    }


    public virtual ObjectResult<PrcGetTranSaleOrderByTranID_Result> PrcGetTranSaleOrderByTranID(Nullable<int> tranID)
    {

        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTranSaleOrderByTranID_Result>("PrcGetTranSaleOrderByTranID", tranIDParameter);
    }


    public virtual ObjectResult<PrcGetTranSaleReturnByTranID_Result> PrcGetTranSaleReturnByTranID(Nullable<int> tranID)
    {

        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTranSaleReturnByTranID_Result>("PrcGetTranSaleReturnByTranID", tranIDParameter);
    }


    public virtual ObjectResult<PrcGetUnit_Result> PrcGetUnit()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetUnit_Result>("PrcGetUnit");
    }


    public virtual ObjectResult<PrcGetUnitByProductID_Result> PrcGetUnitByProductID(Nullable<int> productID)
    {

        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetUnitByProductID_Result>("PrcGetUnitByProductID", productIDParameter);
    }


    public virtual ObjectResult<PrcGetUser_Result> PrcGetUser()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetUser_Result>("PrcGetUser");
    }


    public virtual ObjectResult<PrcGetVariantByProductID_Result> PrcGetVariantByProductID(Nullable<int> productID)
    {

        var productIDParameter = productID.HasValue ?
            new ObjectParameter("ProductID", productID) :
            new ObjectParameter("ProductID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetVariantByProductID_Result>("PrcGetVariantByProductID", productIDParameter);
    }


    public virtual ObjectResult<PrcGetVoucherFormat_Result> PrcGetVoucherFormat()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetVoucherFormat_Result>("PrcGetVoucherFormat");
    }


    public virtual ObjectResult<PrcGetVoucherSetting_Result> PrcGetVoucherSetting()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetVoucherSetting_Result>("PrcGetVoucherSetting");
    }


    public virtual int PrcInsertAdjustType(string adjustTypeName, string shortName, Nullable<bool> isIncrease, string sign)
    {

        var adjustTypeNameParameter = adjustTypeName != null ?
            new ObjectParameter("AdjustTypeName", adjustTypeName) :
            new ObjectParameter("AdjustTypeName", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        var isIncreaseParameter = isIncrease.HasValue ?
            new ObjectParameter("IsIncrease", isIncrease) :
            new ObjectParameter("IsIncrease", typeof(bool));


        var signParameter = sign != null ?
            new ObjectParameter("Sign", sign) :
            new ObjectParameter("Sign", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertAdjustType", adjustTypeNameParameter, shortNameParameter, isIncreaseParameter, signParameter);
    }


    public virtual int PrcInsertBank(string name, string shortName)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertBank", nameParameter, shortNameParameter);
    }


    public virtual int PrcInsertBankPayment(string name, Nullable<int> bankID)
    {

        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var bankIDParameter = bankID.HasValue ?
            new ObjectParameter("BankID", bankID) :
            new ObjectParameter("BankID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertBankPayment", nameParameter, bankIDParameter);
    }


    public virtual int PrcInsertBranch(string branchName, string shortName, string description, string code, string phone, string address, string email, string tax, string serviceCharges)
    {

        var branchNameParameter = branchName != null ?
            new ObjectParameter("BranchName", branchName) :
            new ObjectParameter("BranchName", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var taxParameter = tax != null ?
            new ObjectParameter("Tax", tax) :
            new ObjectParameter("Tax", typeof(string));


        var serviceChargesParameter = serviceCharges != null ?
            new ObjectParameter("ServiceCharges", serviceCharges) :
            new ObjectParameter("ServiceCharges", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertBranch", branchNameParameter, shortNameParameter, descriptionParameter, codeParameter, phoneParameter, addressParameter, emailParameter, taxParameter, serviceChargesParameter);
    }


    public virtual int PrcInsertCustomer(string customerName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<int> branchID, Nullable<bool> isCredit, Nullable<int> divisionID)
    {

        var customerNameParameter = customerName != null ?
            new ObjectParameter("CustomerName", customerName) :
            new ObjectParameter("CustomerName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var contactParameter = contact != null ?
            new ObjectParameter("Contact", contact) :
            new ObjectParameter("Contact", typeof(string));


        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var isCreditParameter = isCredit.HasValue ?
            new ObjectParameter("IsCredit", isCredit) :
            new ObjectParameter("IsCredit", typeof(bool));


        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertCustomer", customerNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, branchIDParameter, isCreditParameter, divisionIDParameter);
    }


    public virtual int PrcInsertLocation(string locationName, string shortName, string description, string code, string phone, string address, string email, Nullable<int> branchID)
    {

        var locationNameParameter = locationName != null ?
            new ObjectParameter("LocationName", locationName) :
            new ObjectParameter("LocationName", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertLocation", locationNameParameter, shortNameParameter, descriptionParameter, codeParameter, phoneParameter, addressParameter, emailParameter, branchIDParameter);
    }


    public virtual int PrcInsertSale(Nullable<System.DateTime> date, string voucher, Nullable<int> userID, Nullable<int> customerID, Nullable<int> locationID, Nullable<int> paymentID, Nullable<int> currencyID, Nullable<bool> isDelivery, Nullable<decimal> voucherDis, Nullable<decimal> advancedPayAmt, Nullable<decimal> fOCAmt, Nullable<decimal> taxAmt, Nullable<decimal> chargesAmt, Nullable<decimal> totalAmt, Nullable<decimal> netAmt, Nullable<int> creditLimitDay, Nullable<int> branchID, Nullable<int> vouDisPercent, Nullable<decimal> vouDisAmount, Nullable<int> payMethodID, Nullable<int> bankPaymentID, Nullable<int> paymentPercent)
    {

        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var voucherParameter = voucher != null ?
            new ObjectParameter("Voucher", voucher) :
            new ObjectParameter("Voucher", typeof(string));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(int));


        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        var paymentIDParameter = paymentID.HasValue ?
            new ObjectParameter("PaymentID", paymentID) :
            new ObjectParameter("PaymentID", typeof(int));


        var currencyIDParameter = currencyID.HasValue ?
            new ObjectParameter("CurrencyID", currencyID) :
            new ObjectParameter("CurrencyID", typeof(int));


        var isDeliveryParameter = isDelivery.HasValue ?
            new ObjectParameter("IsDelivery", isDelivery) :
            new ObjectParameter("IsDelivery", typeof(bool));


        var voucherDisParameter = voucherDis.HasValue ?
            new ObjectParameter("VoucherDis", voucherDis) :
            new ObjectParameter("VoucherDis", typeof(decimal));


        var advancedPayAmtParameter = advancedPayAmt.HasValue ?
            new ObjectParameter("AdvancedPayAmt", advancedPayAmt) :
            new ObjectParameter("AdvancedPayAmt", typeof(decimal));


        var fOCAmtParameter = fOCAmt.HasValue ?
            new ObjectParameter("FOCAmt", fOCAmt) :
            new ObjectParameter("FOCAmt", typeof(decimal));


        var taxAmtParameter = taxAmt.HasValue ?
            new ObjectParameter("TaxAmt", taxAmt) :
            new ObjectParameter("TaxAmt", typeof(decimal));


        var chargesAmtParameter = chargesAmt.HasValue ?
            new ObjectParameter("ChargesAmt", chargesAmt) :
            new ObjectParameter("ChargesAmt", typeof(decimal));


        var totalAmtParameter = totalAmt.HasValue ?
            new ObjectParameter("TotalAmt", totalAmt) :
            new ObjectParameter("TotalAmt", typeof(decimal));


        var netAmtParameter = netAmt.HasValue ?
            new ObjectParameter("NetAmt", netAmt) :
            new ObjectParameter("NetAmt", typeof(decimal));


        var creditLimitDayParameter = creditLimitDay.HasValue ?
            new ObjectParameter("CreditLimitDay", creditLimitDay) :
            new ObjectParameter("CreditLimitDay", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var vouDisPercentParameter = vouDisPercent.HasValue ?
            new ObjectParameter("VouDisPercent", vouDisPercent) :
            new ObjectParameter("VouDisPercent", typeof(int));


        var vouDisAmountParameter = vouDisAmount.HasValue ?
            new ObjectParameter("VouDisAmount", vouDisAmount) :
            new ObjectParameter("VouDisAmount", typeof(decimal));


        var payMethodIDParameter = payMethodID.HasValue ?
            new ObjectParameter("PayMethodID", payMethodID) :
            new ObjectParameter("PayMethodID", typeof(int));


        var bankPaymentIDParameter = bankPaymentID.HasValue ?
            new ObjectParameter("BankPaymentID", bankPaymentID) :
            new ObjectParameter("BankPaymentID", typeof(int));


        var paymentPercentParameter = paymentPercent.HasValue ?
            new ObjectParameter("PaymentPercent", paymentPercent) :
            new ObjectParameter("PaymentPercent", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertSale", dateParameter, voucherParameter, userIDParameter, customerIDParameter, locationIDParameter, paymentIDParameter, currencyIDParameter, isDeliveryParameter, voucherDisParameter, advancedPayAmtParameter, fOCAmtParameter, taxAmtParameter, chargesAmtParameter, totalAmtParameter, netAmtParameter, creditLimitDayParameter, branchIDParameter, vouDisPercentParameter, vouDisAmountParameter, payMethodIDParameter, bankPaymentIDParameter, paymentPercentParameter);
    }


    public virtual int PrcInsertSaleBySaleOrder(Nullable<decimal> netAmt, Nullable<System.DateTime> date, Nullable<int> tranID)
    {

        var netAmtParameter = netAmt.HasValue ?
            new ObjectParameter("NetAmt", netAmt) :
            new ObjectParameter("NetAmt", typeof(decimal));


        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertSaleBySaleOrder", netAmtParameter, dateParameter, tranIDParameter);
    }


    public virtual int PrcInsertSaleOrder(Nullable<System.DateTime> date, string voucher, Nullable<int> userID, Nullable<int> customerID, Nullable<int> locationID, Nullable<int> paymentID, Nullable<int> currencyID, Nullable<bool> isDelivery, Nullable<decimal> voucherDis, Nullable<decimal> advancedPayAmt, Nullable<decimal> fOCAmt, Nullable<decimal> taxAmt, Nullable<decimal> chargesAmt, Nullable<decimal> totalAmt, Nullable<decimal> netAmt, Nullable<int> creditLimitDay, Nullable<int> branchID, Nullable<int> tranID)
    {

        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var voucherParameter = voucher != null ?
            new ObjectParameter("Voucher", voucher) :
            new ObjectParameter("Voucher", typeof(string));


        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(int));


        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        var paymentIDParameter = paymentID.HasValue ?
            new ObjectParameter("PaymentID", paymentID) :
            new ObjectParameter("PaymentID", typeof(int));


        var currencyIDParameter = currencyID.HasValue ?
            new ObjectParameter("CurrencyID", currencyID) :
            new ObjectParameter("CurrencyID", typeof(int));


        var isDeliveryParameter = isDelivery.HasValue ?
            new ObjectParameter("IsDelivery", isDelivery) :
            new ObjectParameter("IsDelivery", typeof(bool));


        var voucherDisParameter = voucherDis.HasValue ?
            new ObjectParameter("VoucherDis", voucherDis) :
            new ObjectParameter("VoucherDis", typeof(decimal));


        var advancedPayAmtParameter = advancedPayAmt.HasValue ?
            new ObjectParameter("AdvancedPayAmt", advancedPayAmt) :
            new ObjectParameter("AdvancedPayAmt", typeof(decimal));


        var fOCAmtParameter = fOCAmt.HasValue ?
            new ObjectParameter("FOCAmt", fOCAmt) :
            new ObjectParameter("FOCAmt", typeof(decimal));


        var taxAmtParameter = taxAmt.HasValue ?
            new ObjectParameter("TaxAmt", taxAmt) :
            new ObjectParameter("TaxAmt", typeof(decimal));


        var chargesAmtParameter = chargesAmt.HasValue ?
            new ObjectParameter("ChargesAmt", chargesAmt) :
            new ObjectParameter("ChargesAmt", typeof(decimal));


        var totalAmtParameter = totalAmt.HasValue ?
            new ObjectParameter("TotalAmt", totalAmt) :
            new ObjectParameter("TotalAmt", typeof(decimal));


        var netAmtParameter = netAmt.HasValue ?
            new ObjectParameter("NetAmt", netAmt) :
            new ObjectParameter("NetAmt", typeof(decimal));


        var creditLimitDayParameter = creditLimitDay.HasValue ?
            new ObjectParameter("CreditLimitDay", creditLimitDay) :
            new ObjectParameter("CreditLimitDay", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertSaleOrder", dateParameter, voucherParameter, userIDParameter, customerIDParameter, locationIDParameter, paymentIDParameter, currencyIDParameter, isDeliveryParameter, voucherDisParameter, advancedPayAmtParameter, fOCAmtParameter, taxAmtParameter, chargesAmtParameter, totalAmtParameter, netAmtParameter, creditLimitDayParameter, branchIDParameter, tranIDParameter);
    }


    public virtual int PrcInsertTownship(string townshipName, string code, Nullable<int> divisionID)
    {

        var townshipNameParameter = townshipName != null ?
            new ObjectParameter("TownshipName", townshipName) :
            new ObjectParameter("TownshipName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertTownship", townshipNameParameter, codeParameter, divisionIDParameter);
    }


    public virtual int PrcInsertUser(string userName, string userPassword, Nullable<int> branchID, Nullable<bool> isDefaultLocation, Nullable<int> locationID)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var userPasswordParameter = userPassword != null ?
            new ObjectParameter("UserPassword", userPassword) :
            new ObjectParameter("UserPassword", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var isDefaultLocationParameter = isDefaultLocation.HasValue ?
            new ObjectParameter("IsDefaultLocation", isDefaultLocation) :
            new ObjectParameter("IsDefaultLocation", typeof(bool));


        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertUser", userNameParameter, userPasswordParameter, branchIDParameter, isDefaultLocationParameter, locationIDParameter);
    }


    public virtual int PrcInsertVoucherFormat(Nullable<int> branchID, string preFormat, string midFormat, Nullable<int> postFormat)
    {

        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var preFormatParameter = preFormat != null ?
            new ObjectParameter("PreFormat", preFormat) :
            new ObjectParameter("PreFormat", typeof(string));


        var midFormatParameter = midFormat != null ?
            new ObjectParameter("MidFormat", midFormat) :
            new ObjectParameter("MidFormat", typeof(string));


        var postFormatParameter = postFormat.HasValue ?
            new ObjectParameter("PostFormat", postFormat) :
            new ObjectParameter("PostFormat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertVoucherFormat", branchIDParameter, preFormatParameter, midFormatParameter, postFormatParameter);
    }


    public virtual int PrcSaveOtherSetting(Nullable<bool> isMultiBranch, Nullable<bool> isMultiCurrency, Nullable<bool> isMultiUnit, Nullable<bool> isBankPayment, Nullable<bool> isProductPhoto, Nullable<bool> isProductColor, Nullable<bool> isProductSize)
    {

        var isMultiBranchParameter = isMultiBranch.HasValue ?
            new ObjectParameter("IsMultiBranch", isMultiBranch) :
            new ObjectParameter("IsMultiBranch", typeof(bool));


        var isMultiCurrencyParameter = isMultiCurrency.HasValue ?
            new ObjectParameter("IsMultiCurrency", isMultiCurrency) :
            new ObjectParameter("IsMultiCurrency", typeof(bool));


        var isMultiUnitParameter = isMultiUnit.HasValue ?
            new ObjectParameter("IsMultiUnit", isMultiUnit) :
            new ObjectParameter("IsMultiUnit", typeof(bool));


        var isBankPaymentParameter = isBankPayment.HasValue ?
            new ObjectParameter("IsBankPayment", isBankPayment) :
            new ObjectParameter("IsBankPayment", typeof(bool));


        var isProductPhotoParameter = isProductPhoto.HasValue ?
            new ObjectParameter("IsProductPhoto", isProductPhoto) :
            new ObjectParameter("IsProductPhoto", typeof(bool));


        var isProductColorParameter = isProductColor.HasValue ?
            new ObjectParameter("IsProductColor", isProductColor) :
            new ObjectParameter("IsProductColor", typeof(bool));


        var isProductSizeParameter = isProductSize.HasValue ?
            new ObjectParameter("IsProductSize", isProductSize) :
            new ObjectParameter("IsProductSize", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcSaveOtherSetting", isMultiBranchParameter, isMultiCurrencyParameter, isMultiUnitParameter, isBankPaymentParameter, isProductPhotoParameter, isProductColorParameter, isProductSizeParameter);
    }


    public virtual int PrcSaveShopType(Nullable<int> shopTypeID)
    {

        var shopTypeIDParameter = shopTypeID.HasValue ?
            new ObjectParameter("ShopTypeID", shopTypeID) :
            new ObjectParameter("ShopTypeID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcSaveShopType", shopTypeIDParameter);
    }


    public virtual ObjectResult<PrcSearchAdjustType_Result> PrcSearchAdjustType(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchAdjustType_Result>("PrcSearchAdjustType", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchBank_Result> PrcSearchBank(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchBank_Result>("PrcSearchBank", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchBankPayment_Result> PrcSearchBankPayment(string keyword, Nullable<int> bankID)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        var bankIDParameter = bankID.HasValue ?
            new ObjectParameter("BankID", bankID) :
            new ObjectParameter("BankID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchBankPayment_Result>("PrcSearchBankPayment", keywordParameter, bankIDParameter);
    }


    public virtual ObjectResult<PrcSearchBranch_Result> PrcSearchBranch(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchBranch_Result>("PrcSearchBranch", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchByFirstKeyword_Result> PrcSearchByFirstKeyword(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchByFirstKeyword_Result>("PrcSearchByFirstKeyword", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchByLastKeyword_Result> PrcSearchByLastKeyword(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchByLastKeyword_Result>("PrcSearchByLastKeyword", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchDeliveryByDateVoucher_Result> PrcSearchDeliveryByDateVoucher(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchDeliveryByDateVoucher_Result>("PrcSearchDeliveryByDateVoucher", fromDateParameter, toDateParameter, voucherNoParameter);
    }


    public virtual ObjectResult<PrcSearchDeliveryHistoryByDateVoucher_Result> PrcSearchDeliveryHistoryByDateVoucher(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchDeliveryHistoryByDateVoucher_Result>("PrcSearchDeliveryHistoryByDateVoucher", fromDateParameter, toDateParameter, voucherNoParameter);
    }


    public virtual ObjectResult<PrcSearchLocation_Result> PrcSearchLocation(string keyword, Nullable<int> branchID)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchLocation_Result>("PrcSearchLocation", keywordParameter, branchIDParameter);
    }


    public virtual ObjectResult<PrcSearchMainMenu_Result> PrcSearchMainMenu(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchMainMenu_Result>("PrcSearchMainMenu", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchProduct_Result> PrcSearchProduct(string keyword, Nullable<int> mainMenuID, Nullable<int> subMenuID)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        var mainMenuIDParameter = mainMenuID.HasValue ?
            new ObjectParameter("MainMenuID", mainMenuID) :
            new ObjectParameter("MainMenuID", typeof(int));


        var subMenuIDParameter = subMenuID.HasValue ?
            new ObjectParameter("SubMenuID", subMenuID) :
            new ObjectParameter("SubMenuID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchProduct_Result>("PrcSearchProduct", keywordParameter, mainMenuIDParameter, subMenuIDParameter);
    }


    public virtual ObjectResult<PrcSearchProductByCodeName_Result> PrcSearchProductByCodeName(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchProductByCodeName_Result>("PrcSearchProductByCodeName", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchSaleByAllFilter_Result> PrcSearchSaleByAllFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo, Nullable<int> customerId, Nullable<int> locationId, Nullable<int> paymentId, Nullable<int> currencyId)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("customerId", customerId) :
            new ObjectParameter("customerId", typeof(int));


        var locationIdParameter = locationId.HasValue ?
            new ObjectParameter("locationId", locationId) :
            new ObjectParameter("locationId", typeof(int));


        var paymentIdParameter = paymentId.HasValue ?
            new ObjectParameter("paymentId", paymentId) :
            new ObjectParameter("paymentId", typeof(int));


        var currencyIdParameter = currencyId.HasValue ?
            new ObjectParameter("currencyId", currencyId) :
            new ObjectParameter("currencyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleByAllFilter_Result>("PrcSearchSaleByAllFilter", fromDateParameter, toDateParameter, voucherNoParameter, customerIdParameter, locationIdParameter, paymentIdParameter, currencyIdParameter);
    }


    public virtual ObjectResult<PrcSearchSaleByDateVoucher_Result> PrcSearchSaleByDateVoucher(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleByDateVoucher_Result>("PrcSearchSaleByDateVoucher", fromDateParameter, toDateParameter, voucherNoParameter);
    }


    public virtual ObjectResult<PrcSearchSaleByDateVouCus_Result> PrcSearchSaleByDateVouCus(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo, Nullable<int> customerID)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleByDateVouCus_Result>("PrcSearchSaleByDateVouCus", fromDateParameter, toDateParameter, voucherNoParameter, customerIDParameter);
    }


    public virtual ObjectResult<PrcSearchSaleOrderByAllFilter_Result> PrcSearchSaleOrderByAllFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo, Nullable<int> customerId, Nullable<int> locationId, Nullable<int> paymentId, Nullable<int> currencyId)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("customerId", customerId) :
            new ObjectParameter("customerId", typeof(int));


        var locationIdParameter = locationId.HasValue ?
            new ObjectParameter("locationId", locationId) :
            new ObjectParameter("locationId", typeof(int));


        var paymentIdParameter = paymentId.HasValue ?
            new ObjectParameter("paymentId", paymentId) :
            new ObjectParameter("paymentId", typeof(int));


        var currencyIdParameter = currencyId.HasValue ?
            new ObjectParameter("currencyId", currencyId) :
            new ObjectParameter("currencyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleOrderByAllFilter_Result>("PrcSearchSaleOrderByAllFilter", fromDateParameter, toDateParameter, voucherNoParameter, customerIdParameter, locationIdParameter, paymentIdParameter, currencyIdParameter);
    }


    public virtual ObjectResult<PrcSearchSaleOrderByDateVoucher_Result> PrcSearchSaleOrderByDateVoucher(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleOrderByDateVoucher_Result>("PrcSearchSaleOrderByDateVoucher", fromDateParameter, toDateParameter, voucherNoParameter);
    }


    public virtual ObjectResult<PrcSearchSaleReturnByAllFilter_Result> PrcSearchSaleReturnByAllFilter(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo, Nullable<int> customerId, Nullable<int> locationId, Nullable<int> paymentId, Nullable<int> currencyId)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("customerId", customerId) :
            new ObjectParameter("customerId", typeof(int));


        var locationIdParameter = locationId.HasValue ?
            new ObjectParameter("locationId", locationId) :
            new ObjectParameter("locationId", typeof(int));


        var paymentIdParameter = paymentId.HasValue ?
            new ObjectParameter("paymentId", paymentId) :
            new ObjectParameter("paymentId", typeof(int));


        var currencyIdParameter = currencyId.HasValue ?
            new ObjectParameter("currencyId", currencyId) :
            new ObjectParameter("currencyId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleReturnByAllFilter_Result>("PrcSearchSaleReturnByAllFilter", fromDateParameter, toDateParameter, voucherNoParameter, customerIdParameter, locationIdParameter, paymentIdParameter, currencyIdParameter);
    }


    public virtual ObjectResult<PrcSearchSaleReturnByDateVoucher_Result> PrcSearchSaleReturnByDateVoucher(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string voucherNo)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("fromDate", fromDate) :
            new ObjectParameter("fromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("toDate", toDate) :
            new ObjectParameter("toDate", typeof(System.DateTime));


        var voucherNoParameter = voucherNo != null ?
            new ObjectParameter("voucherNo", voucherNo) :
            new ObjectParameter("voucherNo", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSaleReturnByDateVoucher_Result>("PrcSearchSaleReturnByDateVoucher", fromDateParameter, toDateParameter, voucherNoParameter);
    }


    public virtual ObjectResult<PrcSearchSubMenu_Result> PrcSearchSubMenu(Nullable<int> mainMenuID, string keyword)
    {

        var mainMenuIDParameter = mainMenuID.HasValue ?
            new ObjectParameter("MainMenuID", mainMenuID) :
            new ObjectParameter("MainMenuID", typeof(int));


        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSubMenu_Result>("PrcSearchSubMenu", mainMenuIDParameter, keywordParameter);
    }


    public virtual ObjectResult<PrcSearchUser_Result> PrcSearchUser(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchUser_Result>("PrcSearchUser", keywordParameter);
    }


    public virtual ObjectResult<PrcSearchVoucherFormat_Result> PrcSearchVoucherFormat(Nullable<int> branchID)
    {

        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchVoucherFormat_Result>("PrcSearchVoucherFormat", branchIDParameter);
    }


    public virtual ObjectResult<PrcSearchVoucherSetting_Result> PrcSearchVoucherSetting(Nullable<int> branchID)
    {

        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchVoucherSetting_Result>("PrcSearchVoucherSetting", branchIDParameter);
    }


    public virtual int PrcUpdateAdjustType(Nullable<int> adjustTypeID, string adjustTypeName, string shortName, Nullable<bool> isIncrease, string sign)
    {

        var adjustTypeIDParameter = adjustTypeID.HasValue ?
            new ObjectParameter("AdjustTypeID", adjustTypeID) :
            new ObjectParameter("AdjustTypeID", typeof(int));


        var adjustTypeNameParameter = adjustTypeName != null ?
            new ObjectParameter("AdjustTypeName", adjustTypeName) :
            new ObjectParameter("AdjustTypeName", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        var isIncreaseParameter = isIncrease.HasValue ?
            new ObjectParameter("IsIncrease", isIncrease) :
            new ObjectParameter("IsIncrease", typeof(bool));


        var signParameter = sign != null ?
            new ObjectParameter("Sign", sign) :
            new ObjectParameter("Sign", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateAdjustType", adjustTypeIDParameter, adjustTypeNameParameter, shortNameParameter, isIncreaseParameter, signParameter);
    }


    public virtual int PrcUpdateBank(Nullable<int> bankID, string name, string shortName)
    {

        var bankIDParameter = bankID.HasValue ?
            new ObjectParameter("BankID", bankID) :
            new ObjectParameter("BankID", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateBank", bankIDParameter, nameParameter, shortNameParameter);
    }


    public virtual int PrcUpdateBankPayment(Nullable<int> bankPaymentID, Nullable<int> bankID, string name)
    {

        var bankPaymentIDParameter = bankPaymentID.HasValue ?
            new ObjectParameter("BankPaymentID", bankPaymentID) :
            new ObjectParameter("BankPaymentID", typeof(int));


        var bankIDParameter = bankID.HasValue ?
            new ObjectParameter("BankID", bankID) :
            new ObjectParameter("BankID", typeof(int));


        var nameParameter = name != null ?
            new ObjectParameter("Name", name) :
            new ObjectParameter("Name", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateBankPayment", bankPaymentIDParameter, bankIDParameter, nameParameter);
    }


    public virtual int PrcUpdateBranch(Nullable<int> branchID, string branchName, string shortName, string description, string code, string phone, string address, string email, string tax, string serviceCharges)
    {

        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var branchNameParameter = branchName != null ?
            new ObjectParameter("BranchName", branchName) :
            new ObjectParameter("BranchName", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var taxParameter = tax != null ?
            new ObjectParameter("Tax", tax) :
            new ObjectParameter("Tax", typeof(string));


        var serviceChargesParameter = serviceCharges != null ?
            new ObjectParameter("ServiceCharges", serviceCharges) :
            new ObjectParameter("ServiceCharges", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateBranch", branchIDParameter, branchNameParameter, shortNameParameter, descriptionParameter, codeParameter, phoneParameter, addressParameter, emailParameter, taxParameter, serviceChargesParameter);
    }


    public virtual int PrcUpdateCustomer(Nullable<int> customerID, string customerName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<int> branchID, Nullable<bool> isCredit, Nullable<int> divisionID)
    {

        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(int));


        var customerNameParameter = customerName != null ?
            new ObjectParameter("CustomerName", customerName) :
            new ObjectParameter("CustomerName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var contactParameter = contact != null ?
            new ObjectParameter("Contact", contact) :
            new ObjectParameter("Contact", typeof(string));


        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var isCreditParameter = isCredit.HasValue ?
            new ObjectParameter("IsCredit", isCredit) :
            new ObjectParameter("IsCredit", typeof(bool));


        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateCustomer", customerIDParameter, customerNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, branchIDParameter, isCreditParameter, divisionIDParameter);
    }


    public virtual int PrcUpdateLocation(Nullable<int> locationID, string locationName, string shortName, string description, string code, string phone, string address, string email, Nullable<int> branchID)
    {

        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        var locationNameParameter = locationName != null ?
            new ObjectParameter("LocationName", locationName) :
            new ObjectParameter("LocationName", typeof(string));


        var shortNameParameter = shortName != null ?
            new ObjectParameter("ShortName", shortName) :
            new ObjectParameter("ShortName", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateLocation", locationIDParameter, locationNameParameter, shortNameParameter, descriptionParameter, codeParameter, phoneParameter, addressParameter, emailParameter, branchIDParameter);
    }


    public virtual int PrcUpdateMainMenu(Nullable<int> menuID, string menuName, string code, Nullable<int> sortcode, byte[] photo, Nullable<int> isphotoupdate)
    {

        var menuIDParameter = menuID.HasValue ?
            new ObjectParameter("menuID", menuID) :
            new ObjectParameter("menuID", typeof(int));


        var menuNameParameter = menuName != null ?
            new ObjectParameter("menuName", menuName) :
            new ObjectParameter("menuName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("code", code) :
            new ObjectParameter("code", typeof(string));


        var sortcodeParameter = sortcode.HasValue ?
            new ObjectParameter("sortcode", sortcode) :
            new ObjectParameter("sortcode", typeof(int));


        var photoParameter = photo != null ?
            new ObjectParameter("photo", photo) :
            new ObjectParameter("photo", typeof(byte[]));


        var isphotoupdateParameter = isphotoupdate.HasValue ?
            new ObjectParameter("isphotoupdate", isphotoupdate) :
            new ObjectParameter("isphotoupdate", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateMainMenu", menuIDParameter, menuNameParameter, codeParameter, sortcodeParameter, photoParameter, isphotoupdateParameter);
    }


    public virtual int PrcUpdateSaleByTranID(Nullable<int> userID, Nullable<int> customerID, Nullable<int> locationID, Nullable<int> paymentID, Nullable<int> currencyID, Nullable<bool> isDelivery, Nullable<decimal> voucherDis, Nullable<decimal> advancedPayAmt, Nullable<decimal> fOCAmt, Nullable<decimal> taxAmt, Nullable<decimal> chargesAmt, Nullable<decimal> totalAmt, Nullable<decimal> netAmt, Nullable<int> creditLimitDay, Nullable<int> tranID, Nullable<int> vouDisPercent, Nullable<decimal> vouDisAmount)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(int));


        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        var paymentIDParameter = paymentID.HasValue ?
            new ObjectParameter("PaymentID", paymentID) :
            new ObjectParameter("PaymentID", typeof(int));


        var currencyIDParameter = currencyID.HasValue ?
            new ObjectParameter("CurrencyID", currencyID) :
            new ObjectParameter("CurrencyID", typeof(int));


        var isDeliveryParameter = isDelivery.HasValue ?
            new ObjectParameter("IsDelivery", isDelivery) :
            new ObjectParameter("IsDelivery", typeof(bool));


        var voucherDisParameter = voucherDis.HasValue ?
            new ObjectParameter("VoucherDis", voucherDis) :
            new ObjectParameter("VoucherDis", typeof(decimal));


        var advancedPayAmtParameter = advancedPayAmt.HasValue ?
            new ObjectParameter("AdvancedPayAmt", advancedPayAmt) :
            new ObjectParameter("AdvancedPayAmt", typeof(decimal));


        var fOCAmtParameter = fOCAmt.HasValue ?
            new ObjectParameter("FOCAmt", fOCAmt) :
            new ObjectParameter("FOCAmt", typeof(decimal));


        var taxAmtParameter = taxAmt.HasValue ?
            new ObjectParameter("TaxAmt", taxAmt) :
            new ObjectParameter("TaxAmt", typeof(decimal));


        var chargesAmtParameter = chargesAmt.HasValue ?
            new ObjectParameter("ChargesAmt", chargesAmt) :
            new ObjectParameter("ChargesAmt", typeof(decimal));


        var totalAmtParameter = totalAmt.HasValue ?
            new ObjectParameter("TotalAmt", totalAmt) :
            new ObjectParameter("TotalAmt", typeof(decimal));


        var netAmtParameter = netAmt.HasValue ?
            new ObjectParameter("NetAmt", netAmt) :
            new ObjectParameter("NetAmt", typeof(decimal));


        var creditLimitDayParameter = creditLimitDay.HasValue ?
            new ObjectParameter("CreditLimitDay", creditLimitDay) :
            new ObjectParameter("CreditLimitDay", typeof(int));


        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        var vouDisPercentParameter = vouDisPercent.HasValue ?
            new ObjectParameter("VouDisPercent", vouDisPercent) :
            new ObjectParameter("VouDisPercent", typeof(int));


        var vouDisAmountParameter = vouDisAmount.HasValue ?
            new ObjectParameter("VouDisAmount", vouDisAmount) :
            new ObjectParameter("VouDisAmount", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateSaleByTranID", userIDParameter, customerIDParameter, locationIDParameter, paymentIDParameter, currencyIDParameter, isDeliveryParameter, voucherDisParameter, advancedPayAmtParameter, fOCAmtParameter, taxAmtParameter, chargesAmtParameter, totalAmtParameter, netAmtParameter, creditLimitDayParameter, tranIDParameter, vouDisPercentParameter, vouDisAmountParameter);
    }


    public virtual int PrcUpdateSaleOrderByTranID(Nullable<int> userID, Nullable<int> customerID, Nullable<int> locationID, Nullable<int> paymentID, Nullable<int> currencyID, Nullable<bool> isDelivery, Nullable<decimal> voucherDis, Nullable<decimal> advancedPayAmt, Nullable<decimal> fOCAmt, Nullable<decimal> taxAmt, Nullable<decimal> chargesAmt, Nullable<decimal> totalAmt, Nullable<decimal> netAmt, Nullable<int> creditLimitDay, Nullable<int> tranID)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var customerIDParameter = customerID.HasValue ?
            new ObjectParameter("CustomerID", customerID) :
            new ObjectParameter("CustomerID", typeof(int));


        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        var paymentIDParameter = paymentID.HasValue ?
            new ObjectParameter("PaymentID", paymentID) :
            new ObjectParameter("PaymentID", typeof(int));


        var currencyIDParameter = currencyID.HasValue ?
            new ObjectParameter("CurrencyID", currencyID) :
            new ObjectParameter("CurrencyID", typeof(int));


        var isDeliveryParameter = isDelivery.HasValue ?
            new ObjectParameter("IsDelivery", isDelivery) :
            new ObjectParameter("IsDelivery", typeof(bool));


        var voucherDisParameter = voucherDis.HasValue ?
            new ObjectParameter("VoucherDis", voucherDis) :
            new ObjectParameter("VoucherDis", typeof(decimal));


        var advancedPayAmtParameter = advancedPayAmt.HasValue ?
            new ObjectParameter("AdvancedPayAmt", advancedPayAmt) :
            new ObjectParameter("AdvancedPayAmt", typeof(decimal));


        var fOCAmtParameter = fOCAmt.HasValue ?
            new ObjectParameter("FOCAmt", fOCAmt) :
            new ObjectParameter("FOCAmt", typeof(decimal));


        var taxAmtParameter = taxAmt.HasValue ?
            new ObjectParameter("TaxAmt", taxAmt) :
            new ObjectParameter("TaxAmt", typeof(decimal));


        var chargesAmtParameter = chargesAmt.HasValue ?
            new ObjectParameter("ChargesAmt", chargesAmt) :
            new ObjectParameter("ChargesAmt", typeof(decimal));


        var totalAmtParameter = totalAmt.HasValue ?
            new ObjectParameter("TotalAmt", totalAmt) :
            new ObjectParameter("TotalAmt", typeof(decimal));


        var netAmtParameter = netAmt.HasValue ?
            new ObjectParameter("NetAmt", netAmt) :
            new ObjectParameter("NetAmt", typeof(decimal));


        var creditLimitDayParameter = creditLimitDay.HasValue ?
            new ObjectParameter("CreditLimitDay", creditLimitDay) :
            new ObjectParameter("CreditLimitDay", typeof(int));


        var tranIDParameter = tranID.HasValue ?
            new ObjectParameter("TranID", tranID) :
            new ObjectParameter("TranID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateSaleOrderByTranID", userIDParameter, customerIDParameter, locationIDParameter, paymentIDParameter, currencyIDParameter, isDeliveryParameter, voucherDisParameter, advancedPayAmtParameter, fOCAmtParameter, taxAmtParameter, chargesAmtParameter, totalAmtParameter, netAmtParameter, creditLimitDayParameter, tranIDParameter);
    }


    public virtual int PrcUpdateSubMenu(Nullable<int> sMenuID, string sMenuName, string sCode, Nullable<int> sSortCode, byte[] photo, Nullable<int> mainMenuID, Nullable<int> isupdatephoto)
    {

        var sMenuIDParameter = sMenuID.HasValue ?
            new ObjectParameter("sMenuID", sMenuID) :
            new ObjectParameter("sMenuID", typeof(int));


        var sMenuNameParameter = sMenuName != null ?
            new ObjectParameter("sMenuName", sMenuName) :
            new ObjectParameter("sMenuName", typeof(string));


        var sCodeParameter = sCode != null ?
            new ObjectParameter("sCode", sCode) :
            new ObjectParameter("sCode", typeof(string));


        var sSortCodeParameter = sSortCode.HasValue ?
            new ObjectParameter("sSortCode", sSortCode) :
            new ObjectParameter("sSortCode", typeof(int));


        var photoParameter = photo != null ?
            new ObjectParameter("Photo", photo) :
            new ObjectParameter("Photo", typeof(byte[]));


        var mainMenuIDParameter = mainMenuID.HasValue ?
            new ObjectParameter("mainMenuID", mainMenuID) :
            new ObjectParameter("mainMenuID", typeof(int));


        var isupdatephotoParameter = isupdatephoto.HasValue ?
            new ObjectParameter("isupdatephoto", isupdatephoto) :
            new ObjectParameter("isupdatephoto", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateSubMenu", sMenuIDParameter, sMenuNameParameter, sCodeParameter, sSortCodeParameter, photoParameter, mainMenuIDParameter, isupdatephotoParameter);
    }


    public virtual int PrcUpdateTownship(Nullable<int> townshipID, string townshipName, string code, Nullable<int> divisionID)
    {

        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        var townshipNameParameter = townshipName != null ?
            new ObjectParameter("TownshipName", townshipName) :
            new ObjectParameter("TownshipName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateTownship", townshipIDParameter, townshipNameParameter, codeParameter, divisionIDParameter);
    }


    public virtual int PrcUpdateUser(Nullable<int> userID, string userName, string userPassword, Nullable<int> branchID, Nullable<bool> isDefaultLocation, Nullable<int> locationID)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var userPasswordParameter = userPassword != null ?
            new ObjectParameter("UserPassword", userPassword) :
            new ObjectParameter("UserPassword", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var isDefaultLocationParameter = isDefaultLocation.HasValue ?
            new ObjectParameter("IsDefaultLocation", isDefaultLocation) :
            new ObjectParameter("IsDefaultLocation", typeof(bool));


        var locationIDParameter = locationID.HasValue ?
            new ObjectParameter("LocationID", locationID) :
            new ObjectParameter("LocationID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateUser", userIDParameter, userNameParameter, userPasswordParameter, branchIDParameter, isDefaultLocationParameter, locationIDParameter);
    }


    public virtual int PrcUpdateVoucherFormat(Nullable<int> iD, Nullable<int> branchID, string preFormat, string midFormat, Nullable<int> postFormat)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var preFormatParameter = preFormat != null ?
            new ObjectParameter("PreFormat", preFormat) :
            new ObjectParameter("PreFormat", typeof(string));


        var midFormatParameter = midFormat != null ?
            new ObjectParameter("MidFormat", midFormat) :
            new ObjectParameter("MidFormat", typeof(string));


        var postFormatParameter = postFormat.HasValue ?
            new ObjectParameter("PostFormat", postFormat) :
            new ObjectParameter("PostFormat", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateVoucherFormat", iDParameter, branchIDParameter, preFormatParameter, midFormatParameter, postFormatParameter);
    }


    public virtual ObjectResult<Nullable<int>> PrcValidateAdmin(string adminName, string adminPassword)
    {

        var adminNameParameter = adminName != null ?
            new ObjectParameter("AdminName", adminName) :
            new ObjectParameter("AdminName", typeof(string));


        var adminPasswordParameter = adminPassword != null ?
            new ObjectParameter("AdminPassword", adminPassword) :
            new ObjectParameter("AdminPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PrcValidateAdmin", adminNameParameter, adminPasswordParameter);
    }


    public virtual ObjectResult<Nullable<int>> PrcValidateUser(Nullable<int> userID, string userPassword)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var userPasswordParameter = userPassword != null ?
            new ObjectParameter("UserPassword", userPassword) :
            new ObjectParameter("UserPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PrcValidateUser", userIDParameter, userPasswordParameter);
    }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }


    public virtual ObjectResult<PrcGetCustomer_Result> PrcGetCustomer()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCustomer_Result>("PrcGetCustomer");
    }


    public virtual ObjectResult<PrcSearchCustomer_Result> PrcSearchCustomer(string keyword, Nullable<int> branchID, Nullable<int> townshipID)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchCustomer_Result>("PrcSearchCustomer", keywordParameter, branchIDParameter, townshipIDParameter);
    }


    public virtual int PrcInsertSupplier(string supplierName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<int> branchID, Nullable<bool> isCredit, Nullable<int> divisionID)
    {

        var supplierNameParameter = supplierName != null ?
            new ObjectParameter("SupplierName", supplierName) :
            new ObjectParameter("SupplierName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var contactParameter = contact != null ?
            new ObjectParameter("Contact", contact) :
            new ObjectParameter("Contact", typeof(string));


        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var isCreditParameter = isCredit.HasValue ?
            new ObjectParameter("IsCredit", isCredit) :
            new ObjectParameter("IsCredit", typeof(bool));


        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertSupplier", supplierNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, branchIDParameter, isCreditParameter, divisionIDParameter);
    }


    public virtual ObjectResult<PrcSearchSupplier_Result> PrcSearchSupplier(string keyword, Nullable<int> branchID, Nullable<int> townshipID)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSupplier_Result>("PrcSearchSupplier", keywordParameter, branchIDParameter, townshipIDParameter);
    }


    public virtual int PrcUpdateSupplier(Nullable<int> supplierID, string supplierName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<int> branchID, Nullable<bool> isCredit, Nullable<int> divisionID)
    {

        var supplierIDParameter = supplierID.HasValue ?
            new ObjectParameter("SupplierID", supplierID) :
            new ObjectParameter("SupplierID", typeof(int));


        var supplierNameParameter = supplierName != null ?
            new ObjectParameter("SupplierName", supplierName) :
            new ObjectParameter("SupplierName", typeof(string));


        var codeParameter = code != null ?
            new ObjectParameter("Code", code) :
            new ObjectParameter("Code", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var addressParameter = address != null ?
            new ObjectParameter("Address", address) :
            new ObjectParameter("Address", typeof(string));


        var contactParameter = contact != null ?
            new ObjectParameter("Contact", contact) :
            new ObjectParameter("Contact", typeof(string));


        var townshipIDParameter = townshipID.HasValue ?
            new ObjectParameter("TownshipID", townshipID) :
            new ObjectParameter("TownshipID", typeof(int));


        var branchIDParameter = branchID.HasValue ?
            new ObjectParameter("BranchID", branchID) :
            new ObjectParameter("BranchID", typeof(int));


        var isCreditParameter = isCredit.HasValue ?
            new ObjectParameter("IsCredit", isCredit) :
            new ObjectParameter("IsCredit", typeof(bool));


        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateSupplier", supplierIDParameter, supplierNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, branchIDParameter, isCreditParameter, divisionIDParameter);
    }


    public virtual ObjectResult<PrcGetSupplier_Result> PrcGetSupplier()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetSupplier_Result>("PrcGetSupplier");
    }


    public virtual ObjectResult<PrcSearchTownship_Result> PrcSearchTownship(string keyword)
    {

        var keywordParameter = keyword != null ?
            new ObjectParameter("keyword", keyword) :
            new ObjectParameter("keyword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchTownship_Result>("PrcSearchTownship", keywordParameter);
    }


    public virtual ObjectResult<PrcGetDivisionSelectTownship_Result> PrcGetDivisionSelectTownship(Nullable<int> divisionID)
    {

        var divisionIDParameter = divisionID.HasValue ?
            new ObjectParameter("DivisionID", divisionID) :
            new ObjectParameter("DivisionID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetDivisionSelectTownship_Result>("PrcGetDivisionSelectTownship", divisionIDParameter);
    }


    public virtual ObjectResult<PrcGetTownship_Result> PrcGetTownship()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTownship_Result>("PrcGetTownship");
    }


    public virtual ObjectResult<Nullable<int>> PrcGetMasterSaleOrderIdCount()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PrcGetMasterSaleOrderIdCount");
    }


    public virtual int PrcDeleteCLTranSaleOrder(Nullable<int> iD)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDeleteCLTranSaleOrder", iDParameter);
    }


    public virtual int PrcUpdateCLTranSaleOrder(Nullable<int> iD, Nullable<int> quantity)
    {

        var iDParameter = iD.HasValue ?
            new ObjectParameter("ID", iD) :
            new ObjectParameter("ID", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateCLTranSaleOrder", iDParameter, quantityParameter);
    }


    public virtual ObjectResult<PrcGetCLMasterSaleOrder_Result> PrcGetCLMasterSaleOrder()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCLMasterSaleOrder_Result>("PrcGetCLMasterSaleOrder");
    }


    public virtual ObjectResult<PrcGetCLTranSaleOrderBySaleOrderID_Result> PrcGetCLTranSaleOrderBySaleOrderID(Nullable<int> saleOrderID)
    {

        var saleOrderIDParameter = saleOrderID.HasValue ?
            new ObjectParameter("SaleOrderID", saleOrderID) :
            new ObjectParameter("SaleOrderID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCLTranSaleOrderBySaleOrderID_Result>("PrcGetCLTranSaleOrderBySaleOrderID", saleOrderIDParameter);
    }


    public virtual ObjectResult<PrcSearchCLMasterSaleOrder_Result> PrcSearchCLMasterSaleOrder(string keywords)
    {

        var keywordsParameter = keywords != null ?
            new ObjectParameter("keywords", keywords) :
            new ObjectParameter("keywords", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchCLMasterSaleOrder_Result>("PrcSearchCLMasterSaleOrder", keywordsParameter);
    }


    public virtual int PrcCLUpdateTranSaleOrder(Nullable<int> saleOrderID, Nullable<int> subtotal, Nullable<int> taxAmt, Nullable<int> chargesAmt, Nullable<int> total)
    {

        var saleOrderIDParameter = saleOrderID.HasValue ?
            new ObjectParameter("SaleOrderID", saleOrderID) :
            new ObjectParameter("SaleOrderID", typeof(int));


        var subtotalParameter = subtotal.HasValue ?
            new ObjectParameter("Subtotal", subtotal) :
            new ObjectParameter("Subtotal", typeof(int));


        var taxAmtParameter = taxAmt.HasValue ?
            new ObjectParameter("TaxAmt", taxAmt) :
            new ObjectParameter("TaxAmt", typeof(int));


        var chargesAmtParameter = chargesAmt.HasValue ?
            new ObjectParameter("ChargesAmt", chargesAmt) :
            new ObjectParameter("ChargesAmt", typeof(int));


        var totalParameter = total.HasValue ?
            new ObjectParameter("Total", total) :
            new ObjectParameter("Total", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcCLUpdateTranSaleOrder", saleOrderIDParameter, subtotalParameter, taxAmtParameter, chargesAmtParameter, totalParameter);
    }

}

}

