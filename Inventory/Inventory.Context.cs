//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Inventory
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InventoryDBEntities : DbContext
    {
        public InventoryDBEntities()
            : base("name=InventoryDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SAdjustType> SAdjustTypes { get; set; }
        public virtual DbSet<SBank> SBanks { get; set; }
        public virtual DbSet<SBankPayment> SBankPayments { get; set; }
        public virtual DbSet<SClient> SClients { get; set; }
        public virtual DbSet<SCompanySetting> SCompanySettings { get; set; }
        public virtual DbSet<SCustomer> SCustomers { get; set; }
        public virtual DbSet<SDivision> SDivisions { get; set; }
        public virtual DbSet<SLocation> SLocations { get; set; }
        public virtual DbSet<SMainMenu> SMainMenus { get; set; }
        public virtual DbSet<SProduct> SProducts { get; set; }
        public virtual DbSet<SSubMenu> SSubMenus { get; set; }
        public virtual DbSet<SSupplier> SSuppliers { get; set; }
        public virtual DbSet<STownship> STownships { get; set; }
        public virtual DbSet<SUnit> SUnits { get; set; }
        public virtual DbSet<SUser> SUsers { get; set; }
        public virtual DbSet<SVoucherFormat> SVoucherFormats { get; set; }
        public virtual DbSet<SVoucherSetting> SVoucherSettings { get; set; }
        public virtual DbSet<SysModule> SysModules { get; set; }
        public virtual DbSet<TCLMasterSaleOrder> TCLMasterSaleOrders { get; set; }
        public virtual DbSet<TCLTranSaleOrder> TCLTranSaleOrders { get; set; }
    
        public virtual int PrcDeleteBank(Nullable<int> bankID)
        {
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDeleteBank", bankIDParameter);
        }
    
        public virtual int PrcDeleteBankPayment(Nullable<int> bankPaymentID)
        {
            var bankPaymentIDParameter = bankPaymentID.HasValue ?
                new ObjectParameter("BankPaymentID", bankPaymentID) :
                new ObjectParameter("BankPaymentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDeleteBankPayment", bankPaymentIDParameter);
        }
    
        public virtual ObjectResult<PrcGetCompanySetting_Result> PrcGetCompanySetting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCompanySetting_Result>("PrcGetCompanySetting");
        }
    
        public virtual ObjectResult<PrcGetProduct_Result> PrcGetProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetProduct_Result>("PrcGetProduct");
        }
    
        public virtual ObjectResult<PrcGetSubMenu_Result> PrcGetSubMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetSubMenu_Result>("PrcGetSubMenu");
        }
    
        public virtual ObjectResult<PrcGetUnit_Result> PrcGetUnit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetUnit_Result>("PrcGetUnit");
        }
    
        public virtual ObjectResult<PrcGetUser_Result> PrcGetUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetUser_Result>("PrcGetUser");
        }
    
        public virtual int PrcInsertAdjustType(string adjustTypeName, string shortName, Nullable<bool> isIncrease, string sign)
        {
            var adjustTypeNameParameter = adjustTypeName != null ?
                new ObjectParameter("AdjustTypeName", adjustTypeName) :
                new ObjectParameter("AdjustTypeName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var isIncreaseParameter = isIncrease.HasValue ?
                new ObjectParameter("IsIncrease", isIncrease) :
                new ObjectParameter("IsIncrease", typeof(bool));
    
            var signParameter = sign != null ?
                new ObjectParameter("Sign", sign) :
                new ObjectParameter("Sign", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertAdjustType", adjustTypeNameParameter, shortNameParameter, isIncreaseParameter, signParameter);
        }
    
        public virtual int PrcInsertBank(string name, string shortName)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertBank", nameParameter, shortNameParameter);
        }
    
        public virtual int PrcInsertBankPayment(string name, Nullable<int> bankID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertBankPayment", nameParameter, bankIDParameter);
        }
    
        public virtual int PrcInsertTownship(string townshipName, string code, Nullable<int> divisionID)
        {
            var townshipNameParameter = townshipName != null ?
                new ObjectParameter("TownshipName", townshipName) :
                new ObjectParameter("TownshipName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertTownship", townshipNameParameter, codeParameter, divisionIDParameter);
        }
    
        public virtual int PrcInsertUser(string userName, string userPassword, Nullable<bool> isDefaultLocation, Nullable<int> locationID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var isDefaultLocationParameter = isDefaultLocation.HasValue ?
                new ObjectParameter("IsDefaultLocation", isDefaultLocation) :
                new ObjectParameter("IsDefaultLocation", typeof(bool));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertUser", userNameParameter, userPasswordParameter, isDefaultLocationParameter, locationIDParameter);
        }
    
        public virtual int PrcSaveOtherSetting(Nullable<bool> isMultiCurrency, Nullable<bool> isMultiUnit, Nullable<bool> isBankPayment, Nullable<bool> isClientPhoneVerify, Nullable<bool> isLimitUser, Nullable<short> limitedUserCount)
        {
            var isMultiCurrencyParameter = isMultiCurrency.HasValue ?
                new ObjectParameter("IsMultiCurrency", isMultiCurrency) :
                new ObjectParameter("IsMultiCurrency", typeof(bool));
    
            var isMultiUnitParameter = isMultiUnit.HasValue ?
                new ObjectParameter("IsMultiUnit", isMultiUnit) :
                new ObjectParameter("IsMultiUnit", typeof(bool));
    
            var isBankPaymentParameter = isBankPayment.HasValue ?
                new ObjectParameter("IsBankPayment", isBankPayment) :
                new ObjectParameter("IsBankPayment", typeof(bool));
    
            var isClientPhoneVerifyParameter = isClientPhoneVerify.HasValue ?
                new ObjectParameter("IsClientPhoneVerify", isClientPhoneVerify) :
                new ObjectParameter("IsClientPhoneVerify", typeof(bool));
    
            var isLimitUserParameter = isLimitUser.HasValue ?
                new ObjectParameter("IsLimitUser", isLimitUser) :
                new ObjectParameter("IsLimitUser", typeof(bool));
    
            var limitedUserCountParameter = limitedUserCount.HasValue ?
                new ObjectParameter("LimitedUserCount", limitedUserCount) :
                new ObjectParameter("LimitedUserCount", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcSaveOtherSetting", isMultiCurrencyParameter, isMultiUnitParameter, isBankPaymentParameter, isClientPhoneVerifyParameter, isLimitUserParameter, limitedUserCountParameter);
        }
    
        public virtual int PrcSaveShopType(Nullable<int> shopTypeID)
        {
            var shopTypeIDParameter = shopTypeID.HasValue ?
                new ObjectParameter("ShopTypeID", shopTypeID) :
                new ObjectParameter("ShopTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcSaveShopType", shopTypeIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchAdjustType_Result> PrcSearchAdjustType(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchAdjustType_Result>("PrcSearchAdjustType", keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchBank_Result> PrcSearchBank(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchBank_Result>("PrcSearchBank", keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchBankPayment_Result> PrcSearchBankPayment(string keyword, Nullable<int> bankID)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchBankPayment_Result>("PrcSearchBankPayment", keywordParameter, bankIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchByFirstKeyword_Result> PrcSearchByFirstKeyword(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchByFirstKeyword_Result>("PrcSearchByFirstKeyword", keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchByLastKeyword_Result> PrcSearchByLastKeyword(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchByLastKeyword_Result>("PrcSearchByLastKeyword", keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchMainMenu_Result> PrcSearchMainMenu(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchMainMenu_Result>("PrcSearchMainMenu", keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchProduct_Result> PrcSearchProduct(string keyword, Nullable<int> mainMenuID, Nullable<int> subMenuID)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var mainMenuIDParameter = mainMenuID.HasValue ?
                new ObjectParameter("MainMenuID", mainMenuID) :
                new ObjectParameter("MainMenuID", typeof(int));
    
            var subMenuIDParameter = subMenuID.HasValue ?
                new ObjectParameter("SubMenuID", subMenuID) :
                new ObjectParameter("SubMenuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchProduct_Result>("PrcSearchProduct", keywordParameter, mainMenuIDParameter, subMenuIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchProductByCodeName_Result> PrcSearchProductByCodeName(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchProductByCodeName_Result>("PrcSearchProductByCodeName", keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchSubMenu_Result> PrcSearchSubMenu(Nullable<int> mainMenuID, string keyword)
        {
            var mainMenuIDParameter = mainMenuID.HasValue ?
                new ObjectParameter("MainMenuID", mainMenuID) :
                new ObjectParameter("MainMenuID", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSubMenu_Result>("PrcSearchSubMenu", mainMenuIDParameter, keywordParameter);
        }
    
        public virtual ObjectResult<PrcSearchUser_Result> PrcSearchUser(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchUser_Result>("PrcSearchUser", keywordParameter);
        }
    
        public virtual int PrcUpdateAdjustType(Nullable<int> adjustTypeID, string adjustTypeName, string shortName, Nullable<bool> isIncrease, string sign)
        {
            var adjustTypeIDParameter = adjustTypeID.HasValue ?
                new ObjectParameter("AdjustTypeID", adjustTypeID) :
                new ObjectParameter("AdjustTypeID", typeof(int));
    
            var adjustTypeNameParameter = adjustTypeName != null ?
                new ObjectParameter("AdjustTypeName", adjustTypeName) :
                new ObjectParameter("AdjustTypeName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var isIncreaseParameter = isIncrease.HasValue ?
                new ObjectParameter("IsIncrease", isIncrease) :
                new ObjectParameter("IsIncrease", typeof(bool));
    
            var signParameter = sign != null ?
                new ObjectParameter("Sign", sign) :
                new ObjectParameter("Sign", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateAdjustType", adjustTypeIDParameter, adjustTypeNameParameter, shortNameParameter, isIncreaseParameter, signParameter);
        }
    
        public virtual int PrcUpdateBank(Nullable<int> bankID, string name, string shortName)
        {
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateBank", bankIDParameter, nameParameter, shortNameParameter);
        }
    
        public virtual int PrcUpdateBankPayment(Nullable<int> bankPaymentID, Nullable<int> bankID, string name)
        {
            var bankPaymentIDParameter = bankPaymentID.HasValue ?
                new ObjectParameter("BankPaymentID", bankPaymentID) :
                new ObjectParameter("BankPaymentID", typeof(int));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateBankPayment", bankPaymentIDParameter, bankIDParameter, nameParameter);
        }
    
        public virtual int PrcUpdateMainMenu(Nullable<int> menuID, string menuName, string code, Nullable<int> sortcode, byte[] photo, Nullable<int> isphotoupdate)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("menuID", menuID) :
                new ObjectParameter("menuID", typeof(int));
    
            var menuNameParameter = menuName != null ?
                new ObjectParameter("menuName", menuName) :
                new ObjectParameter("menuName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var sortcodeParameter = sortcode.HasValue ?
                new ObjectParameter("sortcode", sortcode) :
                new ObjectParameter("sortcode", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            var isphotoupdateParameter = isphotoupdate.HasValue ?
                new ObjectParameter("isphotoupdate", isphotoupdate) :
                new ObjectParameter("isphotoupdate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateMainMenu", menuIDParameter, menuNameParameter, codeParameter, sortcodeParameter, photoParameter, isphotoupdateParameter);
        }
    
        public virtual int PrcUpdateSubMenu(Nullable<int> sMenuID, string sMenuName, string sCode, Nullable<int> sSortCode, byte[] photo, Nullable<int> mainMenuID, Nullable<int> isupdatephoto)
        {
            var sMenuIDParameter = sMenuID.HasValue ?
                new ObjectParameter("sMenuID", sMenuID) :
                new ObjectParameter("sMenuID", typeof(int));
    
            var sMenuNameParameter = sMenuName != null ?
                new ObjectParameter("sMenuName", sMenuName) :
                new ObjectParameter("sMenuName", typeof(string));
    
            var sCodeParameter = sCode != null ?
                new ObjectParameter("sCode", sCode) :
                new ObjectParameter("sCode", typeof(string));
    
            var sSortCodeParameter = sSortCode.HasValue ?
                new ObjectParameter("sSortCode", sSortCode) :
                new ObjectParameter("sSortCode", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(byte[]));
    
            var mainMenuIDParameter = mainMenuID.HasValue ?
                new ObjectParameter("mainMenuID", mainMenuID) :
                new ObjectParameter("mainMenuID", typeof(int));
    
            var isupdatephotoParameter = isupdatephoto.HasValue ?
                new ObjectParameter("isupdatephoto", isupdatephoto) :
                new ObjectParameter("isupdatephoto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateSubMenu", sMenuIDParameter, sMenuNameParameter, sCodeParameter, sSortCodeParameter, photoParameter, mainMenuIDParameter, isupdatephotoParameter);
        }
    
        public virtual int PrcUpdateTownship(Nullable<int> townshipID, string townshipName, string code, Nullable<int> divisionID)
        {
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            var townshipNameParameter = townshipName != null ?
                new ObjectParameter("TownshipName", townshipName) :
                new ObjectParameter("TownshipName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateTownship", townshipIDParameter, townshipNameParameter, codeParameter, divisionIDParameter);
        }
    
        public virtual int PrcUpdateUser(Nullable<int> userID, string userName, string userPassword, Nullable<bool> isDefaultLocation, Nullable<int> locationID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var isDefaultLocationParameter = isDefaultLocation.HasValue ?
                new ObjectParameter("IsDefaultLocation", isDefaultLocation) :
                new ObjectParameter("IsDefaultLocation", typeof(bool));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateUser", userIDParameter, userNameParameter, userPasswordParameter, isDefaultLocationParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PrcValidateAdmin(string adminName, string adminPassword)
        {
            var adminNameParameter = adminName != null ?
                new ObjectParameter("AdminName", adminName) :
                new ObjectParameter("AdminName", typeof(string));
    
            var adminPasswordParameter = adminPassword != null ?
                new ObjectParameter("AdminPassword", adminPassword) :
                new ObjectParameter("AdminPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PrcValidateAdmin", adminNameParameter, adminPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> PrcValidateUser(Nullable<int> userID, string userName, string userPassword)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("PrcValidateUser", userIDParameter, userNameParameter, userPasswordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int PrcDeleteCLTranSaleOrder(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcDeleteCLTranSaleOrder", iDParameter);
        }
    
        public virtual int PrcInsertCustomer(string customerName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<bool> isCredit, Nullable<int> divisionID)
        {
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(bool));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertCustomer", customerNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, isCreditParameter, divisionIDParameter);
        }
    
        public virtual int PrcInsertLocation(string locationName, string shortName, string description, string code, string phone, string address, string email)
        {
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertLocation", locationNameParameter, shortNameParameter, descriptionParameter, codeParameter, phoneParameter, addressParameter, emailParameter);
        }
    
        public virtual int PrcInsertSupplier(string supplierName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<bool> isCredit, Nullable<int> divisionID)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(bool));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertSupplier", supplierNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, isCreditParameter, divisionIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchLocation_Result> PrcSearchLocation(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchLocation_Result>("PrcSearchLocation", keywordParameter);
        }
    
        public virtual int PrcUpdateCustomer(Nullable<int> customerID, string customerName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<bool> isCredit, Nullable<int> divisionID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(bool));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateCustomer", customerIDParameter, customerNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, isCreditParameter, divisionIDParameter);
        }
    
        public virtual int PrcUpdateLocation(Nullable<int> locationID, string locationName, string shortName, string description, string code, string phone, string address, string email)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("LocationName", locationName) :
                new ObjectParameter("LocationName", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateLocation", locationIDParameter, locationNameParameter, shortNameParameter, descriptionParameter, codeParameter, phoneParameter, addressParameter, emailParameter);
        }
    
        public virtual int PrcUpdateSupplier(Nullable<int> supplierID, string supplierName, string code, string phone, string email, string address, string contact, Nullable<int> townshipID, Nullable<bool> isCredit, Nullable<int> divisionID)
        {
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(bool));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateSupplier", supplierIDParameter, supplierNameParameter, codeParameter, phoneParameter, emailParameter, addressParameter, contactParameter, townshipIDParameter, isCreditParameter, divisionIDParameter);
        }
    
        public virtual ObjectResult<PrcGetLocation_Result> PrcGetLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetLocation_Result>("PrcGetLocation");
        }
    
        public virtual int PrcUpdateCLMasterSaleOrder(Nullable<int> saleOrderID, Nullable<int> iD, Nullable<int> subtotal, Nullable<int> taxAmt, Nullable<int> chargesAmt, Nullable<int> total)
        {
            var saleOrderIDParameter = saleOrderID.HasValue ?
                new ObjectParameter("SaleOrderID", saleOrderID) :
                new ObjectParameter("SaleOrderID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(int));
    
            var taxAmtParameter = taxAmt.HasValue ?
                new ObjectParameter("TaxAmt", taxAmt) :
                new ObjectParameter("TaxAmt", typeof(int));
    
            var chargesAmtParameter = chargesAmt.HasValue ?
                new ObjectParameter("ChargesAmt", chargesAmt) :
                new ObjectParameter("ChargesAmt", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateCLMasterSaleOrder", saleOrderIDParameter, iDParameter, subtotalParameter, taxAmtParameter, chargesAmtParameter, totalParameter);
        }
    
        public virtual int PrcUpdateCLTranSaleOrder(Nullable<int> saleOrderID, Nullable<int> subtotal, Nullable<int> taxAmt, Nullable<int> chargesAmt, Nullable<int> total, Nullable<System.DateTime> currentDateTime)
        {
            var saleOrderIDParameter = saleOrderID.HasValue ?
                new ObjectParameter("SaleOrderID", saleOrderID) :
                new ObjectParameter("SaleOrderID", typeof(int));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(int));
    
            var taxAmtParameter = taxAmt.HasValue ?
                new ObjectParameter("TaxAmt", taxAmt) :
                new ObjectParameter("TaxAmt", typeof(int));
    
            var chargesAmtParameter = chargesAmt.HasValue ?
                new ObjectParameter("ChargesAmt", chargesAmt) :
                new ObjectParameter("ChargesAmt", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var currentDateTimeParameter = currentDateTime.HasValue ?
                new ObjectParameter("CurrentDateTime", currentDateTime) :
                new ObjectParameter("CurrentDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateCLTranSaleOrder", saleOrderIDParameter, subtotalParameter, taxAmtParameter, chargesAmtParameter, totalParameter, currentDateTimeParameter);
        }
    
        public virtual ObjectResult<PrcGetCLMasterSaleOrder_Result> PrcGetCLMasterSaleOrder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCLMasterSaleOrder_Result>("PrcGetCLMasterSaleOrder");
        }
    
        public virtual ObjectResult<PrcGetCLTranSaleOrderBySaleOrderID_Result> PrcGetCLTranSaleOrderBySaleOrderID(Nullable<int> saleOrderID)
        {
            var saleOrderIDParameter = saleOrderID.HasValue ?
                new ObjectParameter("SaleOrderID", saleOrderID) :
                new ObjectParameter("SaleOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCLTranSaleOrderBySaleOrderID_Result>("PrcGetCLTranSaleOrderBySaleOrderID", saleOrderIDParameter);
        }
    
        public virtual ObjectResult<PrcGetCustomer_Result> PrcGetCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetCustomer_Result>("PrcGetCustomer");
        }
    
        public virtual ObjectResult<PrcGetSupplier_Result> PrcGetSupplier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetSupplier_Result>("PrcGetSupplier");
        }
    
        public virtual ObjectResult<PrcGetTownship_Result> PrcGetTownship()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTownship_Result>("PrcGetTownship");
        }
    
        public virtual ObjectResult<PrcSearchTownship_Result> PrcSearchTownship(string keyword, Nullable<int> divisionID)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchTownship_Result>("PrcSearchTownship", keywordParameter, divisionIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchCustomer_Result> PrcSearchCustomer(string keyword, Nullable<int> divisionID, Nullable<int> townshipID)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchCustomer_Result>("PrcSearchCustomer", keywordParameter, divisionIDParameter, townshipIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchSupplier_Result> PrcSearchSupplier(string keyword, Nullable<int> divisionID, Nullable<int> townshipID)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchSupplier_Result>("PrcSearchSupplier", keywordParameter, divisionIDParameter, townshipIDParameter);
        }
    
        public virtual ObjectResult<PrcGetVoucherFormat_Result> PrcGetVoucherFormat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetVoucherFormat_Result>("PrcGetVoucherFormat");
        }
    
        public virtual int PrcInsertVoucherFormat(string preFormat, string midFormat, Nullable<int> postFormat, string module)
        {
            var preFormatParameter = preFormat != null ?
                new ObjectParameter("PreFormat", preFormat) :
                new ObjectParameter("PreFormat", typeof(string));
    
            var midFormatParameter = midFormat != null ?
                new ObjectParameter("MidFormat", midFormat) :
                new ObjectParameter("MidFormat", typeof(string));
    
            var postFormatParameter = postFormat.HasValue ?
                new ObjectParameter("PostFormat", postFormat) :
                new ObjectParameter("PostFormat", typeof(int));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcInsertVoucherFormat", preFormatParameter, midFormatParameter, postFormatParameter, moduleParameter);
        }
    
        public virtual int PrcUpdateVoucherFormat(Nullable<int> iD, string preFormat, string midFormat, Nullable<int> postFormat, string module)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var preFormatParameter = preFormat != null ?
                new ObjectParameter("PreFormat", preFormat) :
                new ObjectParameter("PreFormat", typeof(string));
    
            var midFormatParameter = midFormat != null ?
                new ObjectParameter("MidFormat", midFormat) :
                new ObjectParameter("MidFormat", typeof(string));
    
            var postFormatParameter = postFormat.HasValue ?
                new ObjectParameter("PostFormat", postFormat) :
                new ObjectParameter("PostFormat", typeof(int));
    
            var moduleParameter = module != null ?
                new ObjectParameter("Module", module) :
                new ObjectParameter("Module", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrcUpdateVoucherFormat", iDParameter, preFormatParameter, midFormatParameter, postFormatParameter, moduleParameter);
        }
    
        public virtual ObjectResult<PrcGetTownshipByDivision_Result> PrcGetTownshipByDivision(Nullable<int> divisionID)
        {
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetTownshipByDivision_Result>("PrcGetTownshipByDivision", divisionIDParameter);
        }
    
        public virtual ObjectResult<PrcSearchClient_Result> PrcSearchClient(string keyword, Nullable<int> divisionID, Nullable<int> townshipID, Nullable<int> clientType)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var townshipIDParameter = townshipID.HasValue ?
                new ObjectParameter("TownshipID", townshipID) :
                new ObjectParameter("TownshipID", typeof(int));
    
            var clientTypeParameter = clientType.HasValue ?
                new ObjectParameter("ClientType", clientType) :
                new ObjectParameter("ClientType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchClient_Result>("PrcSearchClient", keywordParameter, divisionIDParameter, townshipIDParameter, clientTypeParameter);
        }
    
        public virtual ObjectResult<PrcSearchCLMasterSaleOrder_Result> PrcSearchCLMasterSaleOrder(string searchKeywords)
        {
            var searchKeywordsParameter = searchKeywords != null ?
                new ObjectParameter("SearchKeywords", searchKeywords) :
                new ObjectParameter("SearchKeywords", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcSearchCLMasterSaleOrder_Result>("PrcSearchCLMasterSaleOrder", searchKeywordsParameter);
        }
    
        public virtual ObjectResult<PrcGetVoucherSetting_Result> PrcGetVoucherSetting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrcGetVoucherSetting_Result>("PrcGetVoucherSetting");
        }
    }
}
