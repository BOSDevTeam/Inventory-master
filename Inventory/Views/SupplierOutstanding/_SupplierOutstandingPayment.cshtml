@using Inventory.ViewModels
@model SupplierOutstandingViewModel

<div class="modal fade" id="modalPayment" tabindex="-1" role="dialog" aria-labelledby="adminModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document" style="max-width:1200px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="adminModalLongTitle">@Resource.SupplierOutstandingPayment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="tab">
                    <button id="defaultOpen" class="tablinks" onclick="openPayment(event, 'Current')">Current</button>
                    <button class="tablinks" onclick="openPayment(event, 'History')">History</button>
                </div>

                <div id="divAlertError" class="alert alert-danger alert-dismissible fade show" style="display:none;">
                    <h4 class="alert-heading">Alert!</h4><span id="spnAlertMessage"></span>
                </div>
                <div id="Current" class="tabcontent" style="border:1px solid #f3f3f3;background-color:#fff;padding:10px;">

                    <div class="row setup-title-layout search-div">
                        <div class="col-md-2 col-lg-2">
                            <input id="inputDate" type="date" class="form-control control-input" />
                        </div>
                        <div class="col-md-2 col-lg-2 padding-10 text-center">
                            <input id="inputHidSupplierID" type="hidden" />
                            <label id="lblSupplier" class="control-label note mb-0 display-block">Supplier Name</label>
                        </div>
                        <div class="col-md-8 col-lg-8  padding-10" style="text-align:right;">
                            @Html.RadioButtonFor(model => Model.PayType, 1, new { @id = "rdoPayEach", @class = "PayType", @checked = "checked" })&nbsp;@Html.Label(Resource.PayEachVoucher)
                            &nbsp;&nbsp;
                            @Html.RadioButtonFor(model => Model.PayType, 2, new { @id = "rdoPayAll", @class = "PayType" })&nbsp;@Html.Label(Resource.PayByAll)
                        </div>
                    </div>

                    <div class="row">
                        <table id="tblTranOutstandingList" class="col-md-12 col-lg-12" role="grid">
                            <thead>
                                <tr class="row table-header">
                                    <th class="col-md-2 col-lg-2">@Resource.Date</th>
                                    <th class="col-md-2 col-lg-2">@Resource.VoucherNo</th>
                                    <th class="col-md-2 col-lg-2 aligh-right">@Resource.Opening</th>
                                    <th class="col-md-2 col-lg-2 aligh-right">@Resource.Purchase</th>
                                    <th class="col-md-2 col-lg-2 text-center">@Resource.PayDate</th>
                                    <th class="col-md-2 col-lg-2 text-center">@Resource.Payment</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <div class="col-md-12 col-lg-12 search-div">
                            <div class="row">
                                <div class="col-md-4 col-lg-4"></div>
                                <div class="col-md-4 col-lg-4 aligh-right">
                                    <div class="align-justify-center">
                                        <h5 class="mb-0">@Resource.Balance@Resource.ColonSign</h5>&nbsp;&nbsp;
                                        <h4 id="hTotalBalance" class="mb-0 first-text-color"></h4>
                                        <input id="inputHidTotalBalance" type="hidden" />
                                    </div>
                                </div>
                                <div class="col-md-2 col-lg-2 text-center padding-10">
                                    <input id="inputAllPayDate" type="date" class="border-gray control-input padding-5" style="height:50px;" />
                                </div>
                                <div class="col-md-2 col-lg-2 text-center padding-10">
                                    <input id="inputAllPayment" type="text" class="border-gray control-input mb-0 numberonly text-center" style="height:50px;" placeholder="0" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer m-t-10">
                        <button id="btnClose" class="btn btn-white-outline-third">@Resource.Close</button>
                        <button id="btnSave" class="btn btn-first plr-30">@Resource.Save</button>
                    </div>
                </div>

                <div id="History" class="tabcontent" style="border:1px solid #f3f3f3;background-color:#fff;padding:10px;">

                    <div class="row setup-title-layout search-div">
                        <div class="col-md-12 col-lg-12 padding-10">
                            <label id="lblHSupplier" class="control-label note mb-0">Supplier Name</label>
                        </div>
                    </div>

                    <div class="row">
                        <table id="tblTranOutstandingHistoryList" class="col-md-12 col-lg-12" role="grid">
                            <thead>
                                <tr class="row table-header">
                                    <th class="col-md-2 col-lg-2">@Resource.Date</th>
                                    <th class="col-md-3 col-lg-3">@Resource.VoucherNo</th>
                                    <th class="col-md-2 col-lg-2 text-center">@Resource.PayDate</th>
                                    <th class="col-md-3 col-lg-3 text-center">@Resource.Payment</th>
                                    <th class="col-md-2 col-lg-2">@Resource.PayType</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                    <div class="modal-footer">
                        <button id="btnHistoryClose" class="btn btn-white-outline-third">@Resource.Close</button>
                        <button id="btnHistorySave" class="btn btn-first plr-30">@Resource.Save</button>
                    </div>

                </div>

            </div>

        </div>
    </div>
</div>

<script type="text/javascript">

    let num = 0, allPayment = 0, userVoucherNo = "", ledgerId = 0;

    function initializeHeaderControl(supplierId, supplierName) {
        $('#inputHidSupplierID').val(supplierId);
        $('#lblSupplier').text(supplierName);
        $('#inputDate').val(getTodayDate());
    }

    function initializePaymentControl(totalBalance) {
        const rdoPayEach = document.getElementById('rdoPayEach');
        rdoPayEach.checked = true;
        changeControlByPayType(1);
        $('#hTotalBalance').text(separatedComma(totalBalance));
        $('#inputHidTotalBalance').val(totalBalance);
        $('#inputAllPayDate').val(getTodayDate());
    }

    function changeControlByPayType(payType) {
        if (payType == 1) {
            $('#inputAllPayDate').attr("disabled", true);
            $('#inputAllPayment').attr("disabled", true);
            $('.inputPayDate').attr("disabled", false);
            $('.inputPayment').attr("disabled", false);
            $('#inputAllPayDate').val(getTodayDate());
            $('#inputAllPayment').val("");
        } else if (payType == 2) {
            $('#inputAllPayDate').attr("disabled", false);
            $('#inputAllPayment').attr("disabled", false);
            $('.inputPayDate').attr("disabled", true);
            $('.inputPayment').attr("disabled", true);
            $('.inputPayDate').val(getTodayDate());
            $('.inputPayment').val("");
            $('#tblTranOutstandingList tr').removeClass("selected");
            allPayment = 0;
        }
    }

    function createSupplierOutstandingData(response) {
        num = 0;
        $("#tblTranOutstandingList").find("tbody").empty();
        $.each(response, function (i, item) {
            num += 1;
            let row = '<tr id=' + num + ' class="row table-item">'
                    + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.Date + '</label></td>'
                    + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.UserVoucherNo + '</label></td>'
            if (item.Opening == 0) {
                row += '<td class="col-md-2 col-lg-2 aligh-right"><label class="control-label mb-0">-</label></td>'
            }
            else {
                row += '<td class="col-md-2 col-lg-2 aligh-right"><label class="control-label mb-0">' + separatedComma(item.Opening) + '</label></td>'
            }
            if (item.Purchase == 0) {
                row += '<td class="col-md-2 col-lg-2 aligh-right"><label class="control-label mb-0">-</label></td>'
            } else {
                row += '<td class="col-md-2 col-lg-2 aligh-right"><label class="control-label mb-0">' + separatedComma(item.Purchase) + '</label></td>'
            }
            row += '<td class="col-md-2 col-lg-2 text-center"><input type="date" class="inputPayDate border-gray control-input" /></td>'
                    + '<td class="col-md-2 col-lg-2 text-center"><input type="text" class="inputPayment border-gray control-input mb-0 numberonly text-center" placeholder="0" /></td>'
                    + '<td style="display:none;">' + item.UserVoucherNo + '</td>'
                    + '</tr>';
            $('#tblTranOutstandingList tbody').append(row);
        })
    }

    function openPayment(evt, paymentName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(paymentName).style.display = "block";
        evt.currentTarget.className += " active";
        if (paymentName == "History") {
            $("#tblTranOutstandingHistoryList").find("tbody").empty();
            let supplierId = $('#inputHidSupplierID').val();
            let supplierName = $('#lblSupplier').text();
            paymentHistoryView(supplierId, supplierName);
        }
    }

    function paymentHistoryView(supplierId, supplierName) {
        showLoadingIcon();
        $.ajax({
            type: "GET",
            url: '@Url.Action("PaymentAction", "SupplierOutstandingHistory")',
            data: { "supplierId": supplierId },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                hideLoadingIcon();
                if (!response.ResultDefaultData.IsRequestSuccess)
                    showAlertInDialog(0, response.ResultDefaultData.Message);
                else {
                    initializeHistoryControl(supplierId, supplierName);
                    createOutstandingHistoryData(response.LstSupplierOutstandingPayment);
                }
            },
            failure: function (response) {
                hideLoadingIcon();
                alert(response.responseText);
            },
            error: function (response) {
                hideLoadingIcon();
                alert(response.responseText);
            }
        });
    }

    function initializeHistoryControl(supplierId, supplierName) {
        $('#lblHSupplier').text(supplierName);
    }

    function createOutstandingHistoryData(response) {
        num = 0;
        $("#tblTranOutstandingHistoryList").find("tbody").empty();
        $.each(response, function (i, item) {
            num += 1;
            let row = '<tr id=' + num + ' class="row table-item">'
                    + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.Date + '</label></td>'
                    + '<td class="col-md-3 col-lg-3"><label class="control-label mb-0">' + item.UserVoucherNo + '</label></td>'

            if (item.PayType == 1) {
                row += '<td class="col-md-2 col-lg-2 text-center"><input type="date" class="inputPayDate border-gray control-input" value="' + item.PayDate + '" /></td>'
                    + '<td class="col-md-3 col-lg-3 text-center"><input type="text" class="inputPayment border-gray control-input mb-0 numberonly text-center" placeholder="0" value="' + item.Payment + '" /></td>'
                    + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">@Resource.PayEachVoucher</label></td>'
            }
            else if (item.PayType == 2) {
                row += '<td class="col-md-2 col-lg-2 text-center"><input type="date" class="inputPayDate border-gray control-input" value="' + item.PayDate + '" disabled /></td>'
                    + '<td class="col-md-3 col-lg-3 text-center"><input type="text" class="inputPayment border-gray control-input mb-0 numberonly text-center" placeholder="0" value="' + item.Payment + '" disabled /></td>'
                    + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">@Resource.PayByAll</label></td>'
            }
            row += '<td style="display:none;">' + item.LedgerID + '</td>'
            + '</tr>';
            $('#tblTranOutstandingHistoryList tbody').append(row);
        })
    }

    $(document).ready(function () {

        $("#tblTranOutstandingList").on("click", "tbody tr", function (event) {
            let payType = $('.PayType').filter(':checked').val();
            if (payType == 2) return;
            $('#tblTranOutstandingList tr').removeClass("selected");
            $(this).addClass("selected");
            $(this).find("td:last").each(function () {
                userVoucherNo = $(this).text();
            })
        });

        $("#tblTranOutstandingList").on("keydown", "tbody tr .inputPayment", function (event) {
            if (event.which === 13) {
                if (userVoucherNo == "") return;
                let payment = $(this).val();
                if (payment == "" || payment == 0) return;
                let trId = $(this).closest('tr').attr('id'); // table row ID
                let nextTrId = parseInt(trId) + 1;
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("AddPaymentAction", "SupplierOutstanding")',
                    data: { "userVoucherNo": userVoucherNo, "payment": payment },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.ResultDefaultData.IsRequestSuccess) {
                            if (response.ResultDefaultData.UnSuccessfulReason!= '@Inventory.Common.AppConstants.RequestUnSuccessful.SessionExpired')
                                showAlertInDialog(0, response.ResultDefaultData.Message);
                            else responseUnSuccessful(response);
                        }
                        else {
                            $('#tblTranOutstandingList tr').removeClass("selected");
                            $('#tblTranOutstandingList #' + nextTrId + '').addClass("selected");
                            $('#tblTranOutstandingList #' + nextTrId + ' .inputPayment').focus();
                            userVoucherNo = $('#tblTranOutstandingList #' + nextTrId + ' td:last').text();
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    }
                });
            }
        });

        $("#tblTranOutstandingList").on("change", "tbody tr .inputPayDate", function (event) {
            if (userVoucherNo == "") return;
            let payDate = $(this).val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("ChangedPayDateAction", "SupplierOutstanding")',
                data: { "userVoucherNo": userVoucherNo, "payDate": payDate },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        if (response.ResultDefaultData.UnSuccessfulReason != '@Inventory.Common.AppConstants.RequestUnSuccessful.SessionExpired')
                            showAlertInDialog(0, response.ResultDefaultData.Message);
                        else responseUnSuccessful(response);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $('#inputDate').change(function () {
            let date = $('#inputDate').val();
            let supplierId = $('#inputHidSupplierID').val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("DateChangeAction", "SupplierOutstanding")',
                data: { "supplierId": supplierId, "date": date },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        showAlertInDialog(0, response.ResultDefaultData.Message);
                    else {
                        initializePaymentControl(response.TotalBalance);
                        createSupplierOutstandingData(response.LstSupplierOutstandingPayment);
                        $('.inputPayDate').val(getTodayDate());
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $('.PayType').change(function () {
            let payType = $(this).filter(':checked').val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("PayTypeChangeAction", "SupplierOutstanding")',
                data: { "payType": payType },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    changeControlByPayType(payType);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $('#inputAllPayment').keydown(function (event) {
            if (event.which === 13) {
                let payment = $(this).val();
                validateAllPayment(payment);
            }
        });

        function validateAllPayment(payment) {
            let totalBalance = $('#inputHidTotalBalance').val();
            if (payment == "" || payment == 0) return false;
            else if (parseInt(payment) > parseInt(totalBalance)) {
                showAlertInDialog(0, '@Inventory.Common.AppConstants.Message.InvalidPayment');
                return false;
            } else return true;
        }

        $("#btnSave").click(function (e) {
            let payType = $('.PayType').filter(':checked').val();
            let allPayDate = "";
            if (payType == 2) {
                allPayment = $('#inputAllPayment').val();
                if (!validateAllPayment(allPayment)) return;
                else allPayDate = $('#inputAllPayDate').val();
            }
            let supplierId = $('#inputHidSupplierID').val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("SaveAction", "SupplierOutstanding")',
                data: { "payType": payType, "allPayment": allPayment, "allPayDate": allPayDate, "supplierId": supplierId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        showAlertInDialog(0, response.ResultDefaultData.Message);
                    }
                    else {
                        showToast(1, response.ResultDefaultData.Message);
                        $('#modalPayment').modal('hide');
                        searchAction();
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $("#btnClose").click(function (e) {
            $('#modalPayment').modal('hide');
        });

        $("#tblTranOutstandingHistoryList").on("click", "tbody tr", function (event) {
            $('#tblTranOutstandingHistoryList tr').removeClass("selected");
            $(this).addClass("selected");
            $(this).find("td:last").each(function () {
                ledgerId = $(this).text();
            })
        });

        $("#tblTranOutstandingHistoryList").on("keydown", "tbody tr .inputPayment", function (event) {
            if (event.which === 13) {
                if (ledgerId == 0) return;
                let payment = $(this).val();
                if (payment == "") return;
                let trId = $(this).closest('tr').attr('id'); // table row ID
                let nextTrId = parseInt(trId) + 1;
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("AddPaymentAction", "SupplierOutstandingHistory")',
                    data: { "ledgerId": ledgerId, "payment": payment },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.ResultDefaultData.IsRequestSuccess) {
                            if (response.ResultDefaultData.UnSuccessfulReason != '@Inventory.Common.AppConstants.RequestUnSuccessful.SessionExpired')
                                showAlertInDialog(0, response.Message);
                            else responseUnSuccessful(response);
                        }
                        else {
                            $('#tblTranOutstandingHistoryList tr').removeClass("selected");
                            $('#tblTranOutstandingHistoryList #' + nextTrId + '').addClass("selected");
                            $('#tblTranOutstandingHistoryList #' + nextTrId + ' .inputPayment').focus();
                            ledgerId = $('#tblTranOutstandingHistoryList #' + nextTrId + ' td:last').text();
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    }
                });
            }
        });

        $("#tblTranOutstandingHistoryList").on("change", "tbody tr .inputPayDate", function (event) {
            if (ledgerId == 0) return;
            let payDate = $(this).val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("ChangedPayDateAction", "SupplierOutstandingHistory")',
                data: { "ledgerId": ledgerId, "payDate": payDate },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        if (response.ResultDefaultData.UnSuccessfulReason != '@Inventory.Common.AppConstants.RequestUnSuccessful.SessionExpired')
                            showAlertInDialog(0, response.Message);
                        else responseUnSuccessful(response);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $("#btnHistorySave").click(function (e) {
            let supplierId = $('#inputHidSupplierID').val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("SaveAction", "SupplierOutstandingHistory")',
                data: { "supplierId": supplierId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        showAlertInDialog(0, response.ResultDefaultData.Message);
                    }
                    else {
                        showToast(1, response.ResultDefaultData.Message);
                        $('#modalPayment').modal('hide');
                        searchAction();
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $("#btnHistoryClose").click(function (e) {
            $('#modalPayment').modal('hide');
        });

    });

</script>

