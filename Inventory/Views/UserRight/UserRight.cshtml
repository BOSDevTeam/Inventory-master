@using Inventory.Models
@model UserRightModels
@{
    Layout = Model.Layout;
}

<head>
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/assets/js/jquery-3.2.1.min.js"></script>
    <script type="text/javascript">
        document.getElementById('menuUserRight').className = 'active';
    </script>
</head>

<div class="row setup-title-layout">
    <div class="col-md-12 col-lg-12">
        <label class="page-title">@Resource.UserRight</label>
    </div>
</div>

<div class="m-t-5">
    <div class="row m-0">
        <div class="col-md-3 col-lg-3">
            <div style="background-color:#fff;padding:5px;"><label class="control-title mb-0">@Resource.SelectUser</label></div>
            <div id="divUser" class="submenu">
                @foreach (var item in Model.Users)
                {
                    <button id="@("btnUser"+item.Value)" class="btnUser menu-sub m-t-5" value="@item.Value">@item.Text</button>
                }
            </div>
        </div>
        <div id="divModuleAccess" class="col-md-9 col-lg-9">

            <div class="row">
                <div class="col-md-12 col-lg-12">
                    <label class="control-title mb-0">@Resource.ModuleAccess</label>
                </div>
            </div>

            <div class="tab m-t-5">
                <button id="defaultOpen" class="tablinks" onclick="openModuleGroup(event, 'SetupGroup')">@Resource.SetupModuleAccess</button>
                <button class="tablinks" onclick="openModuleGroup(event, 'EntryGroup')">@Resource.EntryModuleAccess</button>
                <button class="tablinks" onclick="openModuleGroup(event, 'ReportGroup')">@Resource.ReportModuleAccess</button>
            </div>
         
            <div id="SetupGroup" class="tabcontent" style="border:1px solid #f3f3f3;background-color:#fff;padding:10px;margin-bottom:25px;">
                <div class="aligh-right" style="padding-right:5px;">
                    <label class="control-label mb-0">@Resource.AccessAll &nbsp;</label><input id="chkSetupAccessAll" type="checkbox" />
                </div>
                <div id="divSetupGroup"></div>
            </div>

            <div id="EntryGroup" class="tabcontent" style="border:1px solid #f3f3f3;background-color:#fff;padding:10px;margin-bottom:25px;">
                <div class="aligh-right" style="padding-right:5px;">
                    <label class="control-label mb-0">@Resource.AccessAll &nbsp;</label><input id="chkEntryAccessAll" type="checkbox" />
                </div>
                <div id="divEntryGroup"></div>
            </div>

            <div id="ReportGroup" class="tabcontent" style="border:1px solid #f3f3f3;background-color:#fff;padding:10px;margin-bottom:25px;">
                <div class="aligh-right" style="padding-right:5px;">
                    <label class="control-label mb-0">@Resource.AccessAll &nbsp;</label><input id="chkReportAccessAll" type="checkbox" />
                </div>
                <div id="divReportGroup"></div>
            </div>

            <div class="row soft-gray-background pt-1" style="bottom:0px;position:absolute;width:100%;">
                <div class="col-md-2 col-lg-2">
                    <button id="btnReset" class="btn btn-white-outline-third">@Resource.Reset</button>
                </div>
                <div class="col-md-7 col-lg-7"></div>
                <div class="col-md-3 col-lg-3 aligh-right">
                    <button id="btnSave" class="btn btn-first plr-30">@Resource.Save</button>
                </div>
            </div>
         
        </div>
    </div>
</div>

<script type="text/javascript">

    let selectedUserId = 0, moduleType = 1;

    document.getElementById("defaultOpen").click();

    $(document).ready(function () {

        createSetupModuleAccess('', false);
        createEntryModuleAccess('', false);
        createReportModuleAccess('', false);

        $('#btnSave').click(function () {
            if (!validateUser()) {
                showToast(0, '@Resource.SelectUser');
                return;
            }
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("SaveAction", "UserRight")',
                data: { "userId": selectedUserId, "moduleType": moduleType },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        responseUnSuccessful(response);
                    else {
                        showToast(1, '@Inventory.Common.AppConstants.Message.SaveSuccess');
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $("#btnReset").click(function (e) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("ResetAction", "UserRight")',
                data: {},
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    reset();
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $(document).on('click', '.btnUser', function (e) {
            selectedUserId = $(this).val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("UserClickAction", "UserRight")',
                data: { "userId": selectedUserId, "isTechnician": isTechnician, "loginUserId": userId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        responseUnSuccessful(response);
                    else {
                        $(".btnUser").css('background-color', '#fff');
                        $("#btnUser" + selectedUserId).css('background-color', '#36b4e5');
                        if (moduleType != 1) document.getElementById("defaultOpen").click();
                        createSetupModuleAccess(response.LstSetupModuleAccess, true);
                        createEntryModuleAccess(response.LstEntryModuleAccess, true);
                        createReportModuleAccess(response.LstReportModuleAccess, true);
                        $("#chkSetupAccessAll").prop('checked', false);
                        $("#chkEntryAccessAll").prop('checked', false);
                        $("#chkReportAccessAll").prop('checked', false);
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $(document).on('change', '#chkSetupAccessAll', function (e) {
            let isChecked = false;
            if (this.checked) isChecked = true;
            else isChecked = false;
            accessAllModuleByGroup(isChecked);
        });

        $(document).on('change', '#chkEntryAccessAll', function (e) {
            let isChecked = false;
            if (this.checked) isChecked = true;
            else isChecked = false;
            accessAllModuleByGroup(isChecked);
        });

        $(document).on('change', '#chkReportAccessAll', function (e) {
            let isChecked = false;
            if (this.checked) isChecked = true;
            else isChecked = false;
            accessAllModuleByGroup(isChecked);
        });

        $(document).on('change', '.chkSetupModule', function (e) {
            if (!validateUser()) {
                showToast(0, '@Resource.SelectUser');
                $(".chkSetupModule").prop('checked', false);
                return;
            }
            let setupModuleId = $(this).val();
            let isChecked = false;
            if (this.checked) isChecked = true;
            else isChecked = false;
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("AccessSetupModuleAction", "UserRight")',
                data: { "userId": selectedUserId, "isChecked": isChecked, "setupModuleId": setupModuleId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        responseUnSuccessful(response);
                    else createSetupModuleAccess(response.LstSetupModuleAccess, true);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $(document).on('change', '.chkEntryModule', function (e) {
            if (!validateUser()) {
                showToast(0, '@Resource.SelectUser');
                $(".chkEntryModule").prop('checked', false);
                return;
            }
            let entryModuleId = $(this).val();
            let isChecked = false;
            if (this.checked) isChecked = true;
            else isChecked = false;
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("AccessEntryModuleAction", "UserRight")',
                data: { "userId": selectedUserId, "isChecked": isChecked, "entryModuleId": entryModuleId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        responseUnSuccessful(response);
                    else createEntryModuleAccess(response.LstEntryModuleAccess, true);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        $(document).on('change', '.chkReportModule', function (e) {
            if (!validateUser()) {
                showToast(0, '@Resource.SelectUser');
                $(".chkReportModule").prop('checked', false);
                return;
            }
            let reportModuleId = $(this).val();
            let isChecked = false;
            if (this.checked) isChecked = true;
            else isChecked = false;
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("AccessReportModuleAction", "UserRight")',
                data: { "userId": selectedUserId, "isChecked": isChecked, "reportModuleId": reportModuleId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        responseUnSuccessful(response);
                    else createEntryModuleAccess(response.LstEntryModuleAccess, true);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

    })

    function accessAllModuleByGroup(isChecked) {
        if (!validateUser()) {
            showToast(0, '@Resource.SelectUser');
            if (moduleType == 1) $("#chkSetupAccessAll").prop('checked', false);
            else if (moduleType == 2) $("#chkEntryAccessAll").prop('checked', false);
            else if (moduleType == 3) $("#chkReportAccessAll").prop('checked', false);
            return;
        }
        showLoadingIcon();
        $.ajax({
            type: "GET",
            url: '@Url.Action("AccessAllModuleAction", "UserRight")',
            data: { "userId": selectedUserId, "isChecked": isChecked, "moduleType": moduleType },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                hideLoadingIcon();
                if (!response.ResultDefaultData.IsRequestSuccess)
                    responseUnSuccessful(response);
                else {
                    if (moduleType == 1) createSetupModuleAccess(response.LstSetupModuleAccess, true);
                    else if (moduleType == 2) createEntryModuleAccess(response.LstEntryModuleAccess, true);
                    else if (moduleType == 3) createReportModuleAccess(response.LstReportModuleAccess, true);
                }
            },
            failure: function (response) {
                hideLoadingIcon();
                alert(response.responseText);
            },
            error: function (response) {
                hideLoadingIcon();
                alert(response.responseText);
            }
        });
    }

    function createSetupModuleAccess(response, isFromJson) {
        $('#divSetupGroup').empty();
        if (!isFromJson) response = JSON.parse('@Html.Raw(Json.Encode(ViewData["SetupModuleAccess"]))');
        $.each(response, function (index, item) {
            let html = '<div id="divSetupModuleAccess" class="row border-bottom-white m-t-5">'
                    + '<div id="divSetupModuleName" class="col-md-6 col-lg-6">'
                    + '<label>' + item.SetupModuleName + '</label>'
                    + '</div>'
                    + '<div id="divSetupModuleCheck" class="col-md-6 col-lg-6 aligh-right">'
            if (item.IsAllow) {
                html += '<input class="chkSetupModule" type="checkbox" value="' + item.SetupModuleID + '" checked />'
            } else {
                html += '<input class="chkSetupModule" type="checkbox" value="' + item.SetupModuleID + '" />'
            }
            html += '</div></div>'
            $('#divSetupGroup').append(html);
        });
    }

    function createEntryModuleAccess(response, isFromJson) {
        $('#divEntryGroup').empty();
        if (!isFromJson) response = JSON.parse('@Html.Raw(Json.Encode(ViewData["EntryModuleAccess"]))');
        $.each(response, function (index, item) {
            let html = '<div id="divEntryModuleAccess" class="row border-bottom-white m-t-5">'
                    + '<div id="divEntryModuleName" class="col-md-6 col-lg-6">'
                    + '<label>' + item.EntryModuleName + '</label>'
                    + '</div>'
                    + '<div id="divEntryModuleCheck" class="col-md-6 col-lg-6 aligh-right">'
            if (item.IsAllow) {
                html += '<input class="chkEntryModule" type="checkbox" value="' + item.EntryModuleID + '" checked />'
            } else {
                html += '<input class="chkEntryModule" type="checkbox" value="' + item.EntryModuleID + '" />'
            }
            html += '</div></div>'
            $('#divEntryGroup').append(html);
        });
    }

    function createReportModuleAccess(response, isFromJson) {
        $('#divReportGroup').empty();
        if (!isFromJson) response = JSON.parse('@Html.Raw(Json.Encode(ViewData["ReportModuleAccess"]))');
        $.each(response, function (index, item) {
            let html = '<div id="divReportModuleAccess" class="row border-bottom-white m-t-5">'
                    + '<div id="divReportModuleName" class="col-md-6 col-lg-6">'
                    + '<label>' + item.ReportModuleName + '</label>'
                    + '</div>'
                    + '<div id="divReportModuleCheck" class="col-md-6 col-lg-6 aligh-right">'
            if (item.IsAllow) {
                html += '<input class="chkReportModule" type="checkbox" value="' + item.ReportModuleID + '" checked />'
            } else {
                html += '<input class="chkReportModule" type="checkbox" value="' + item.ReportModuleID + '" />'
            }
            html += '</div></div>'
            $('#divReportGroup').append(html);
        });
    }

    function validateUser() {
        if (selectedUserId == 0) return false;
        return true;
    }

    function reset() {
        selectedUserId = 0;
        $(".btnUser").css('background-color', '#fff');
        if (moduleType != 1) {
            document.getElementById("defaultOpen").click();
            moduleType = 1;
        }
        $("#chkSetupAccessAll").prop('checked', false);
        $("#chkEntryAccessAll").prop('checked', false);
        $("#chkReportAccessAll").prop('checked', false);
        $(".chkSetupModule").prop('checked', false);
        $(".chkEntryModule").prop('checked', false);
        $(".chkReportModule").prop('checked', false);
    }

    function openModuleGroup(evt, moduleGroup) {
        var i, tabcontent, tablinks;

        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        document.getElementById(moduleGroup).style.display = "block";
        evt.currentTarget.className += " active";
        if (moduleGroup == "SetupGroup") {
            moduleType = 1;
        } else if (moduleGroup == "EntryGroup") {
            moduleType = 2;
        } else if (moduleGroup == "ReportGroup") {
            moduleType = 3;
        }
    }

</script>



