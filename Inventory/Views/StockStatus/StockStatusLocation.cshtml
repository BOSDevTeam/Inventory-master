@using Inventory.ViewModels
@model StockStatusViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/assets/js/jquery-3.2.1.min.js"></script>

    <style type="text/css">
        #subMenuStockStatusGp {
            display: block;
        }     
        table tbody{
            overflow-y:scroll;
            display:block;
        }
    </style>
</head>  

<div>

    <div class="row setup-title-layout">
        <div class="col-md-6 col-lg-6">
            <label class="page-title">@Resource.StockStatusByLocation</label>
        </div>
        <div class="col-md-6 col-lg-6" style="text-align:right;">
            @Html.RadioButtonFor(model => Model.PriceType, 1, new { @class= "PriceType", @checked = "checked" })&nbsp;@Html.Label(Resource.SalePrice)
            &nbsp;&nbsp;
            @Html.RadioButtonFor(model => Model.PriceType, 0, new { @class = "PriceType" })&nbsp;@Html.Label(Resource.PurchasePrice)
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 col-lg-12">
            <table id="tblStockStatus" style="width:100%">
                <thead>
                    <tr>
                        <th><div></div></th>
                    </tr>
                </thead>
                <tbody id="tableBody"></tbody>
            </table>
        </div>
    </div>

</div>

<script type="text/javascript">
    document.getElementById('subMenuStockStatusByLocation').className = 'active';
    $('body').addClass("hideVerticalScrollbar");
    calcTableBodyHeight();

    function calcTableBodyHeight() {
        let windowHeight = window.innerHeight;
        let title = 50.5; 
        let bodyPadding = 10;
        let tableHeader = 42.5;
        let extra = 50;
        let tableBody = windowHeight - (title + bodyPadding + tableHeader + extra);
        document.getElementById('tableBody').setAttribute("style", "height:" + tableBody + "px");
    }

    $(document).ready(function () {

        setModuleTitle('@Resource.StockStatus', '@Resource.StockStatusByLocation');
        createHeader('', false);
        createItem('',false);

        function createHeader(response, isFromJson) {
            $("#tblStockStatus").find("thead").empty();
            if (!isFromJson) response = JSON.parse('@Html.Raw(Json.Encode(ViewData["StockStatusHeader"]))');

            var row = '<tr class="row table-header">'
                        + '<th class="col-md-1 col-lg-1">' + response.ProductCode + '</th>'
                        + '<th class="col-md-2 col-lg-2">' + response.ProductName + '</th>'
                        + '<th class="col-md-6 col-lg-6">'
                        + '<div class="row">'
                    
            if (response.lstLocationName.length <= 6) {
                $.each(response.lstLocationName, function (index, item) {
                    row += '<label class="col-md-2 col-lg-2 aligh-right mb-0">' + item + '</label>'
                });
            } else {
                $.each(response.lstLocationName, function (index, item) {
                    row += '<label class="col-md-1 col-lg-1 aligh-right mb-0">' + item + '</label>'
                });
            }
            
            row += '</div></th>'
                + '<th class="col-md-1 col-lg-1 aligh-right">' + response.Balance + '</th>'
                + '<th class="col-md-1 col-lg-1 aligh-right">' + response.Price + '</th>'
                + '<th class="col-md-1 col-lg-1 aligh-right">' + response.Amount + '</th>'
                + '</tr>'
            $('#tblStockStatus thead').append(row);
        }

        function createItem(response, isFromJson) {
            $("#tblStockStatus").find("tbody").empty();
            if (!isFromJson) response = JSON.parse('@Html.Raw(Json.Encode(ViewData["StockStatusItem"]))');

            $.each(response, function (index, item) {
                var row = '<tr class="row table-item">'
                         + '<td class="col-md-1 col-lg-1">' + item.ProductCode + '</td>'
                         + '<td class="col-md-2 col-lg-2">' + item.ProductName + '</td>'
                         + '<td class="col-md-6 col-lg-6">'
                         + '<div class="row">'

                if (item.lstLocationBalance.length <= 6) {
                    $.each(item.lstLocationBalance, function (index, balance) {
                        row += '<label class="col-md-2 col-lg-2 aligh-right mb-0">' + balance + '</label>'
                    });
                } else {
                    $.each(item.lstLocationBalance, function (index, balance) {
                        row += '<label class="col-md-1 col-lg-1 aligh-right mb-0">' + balance + '</label>'
                    });
                }
              
                row += '</div></td>'
                    + '<td class="col-md-1 col-lg-1 aligh-right">' + item.Balance + '</td>'
                    + '<td class="col-md-1 col-lg-1 aligh-right">' + separatedComma(item.Price) + '</td>'
                    + '<td class="col-md-1 col-lg-1 aligh-right">' + separatedComma(item.Amount) + '</td>'
                    + '</tr>'
                $('#tblStockStatus tbody').append(row);
            });           
        }

        $("#tblStockStatus").on("click", "tbody tr", function (event) {
            $('#tblStockStatus tr').removeClass("selected");
            $(this).addClass("selected");
        });

        $('.PriceType').change(function () {
            let value = $(this).filter(':checked').val();
            let isRequestValue = false;
            if (value == 1) isRequestValue = true;
            else if (value == 0) isRequestValue = false;
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("PriceTypeChangeAction", "StockStatus")',
                data: { "isRequestValue": isRequestValue },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    createHeader(response.Header, true);
                    createItem(response.LstItem, true);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

    });
</script>


