@using Inventory.ViewModels
@model SaleOrderViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/assets/js/jquery-3.2.1.min.js"></script>

    <style type="text/css">
        #subMenuSaleGp {
            display: block;
        }
    </style>
</head>

<div class="row m-t-5 m-b-5 m-l-5">
    <div class="col-md-2 col-lg-2 note align-justify-center">
        <label id="lblUserVoucherNo" class="control-label mb-0"></label>
    </div>
    <div class="col-md-2 col-lg-2">
        <input id="inputDate" type="date" class="form-control control-input" />
    </div>
    <div class="col-md-3 col-lg-3">
        <input id="inputVoucherID" type="text" class="form-control control-input" placeholder="@Resource.VoucherID" />
    </div>
    <div class="col-md-3 col-lg-3">
        @Html.DropDownList("Customer", Model.Customers, new { @id = "ddlCustomer", @class = "form-control control-input" })
    </div>
    <div class="col-md-2 col-lg-2">
        @Html.DropDownList("Location", Model.Locations, new { @id = "ddlLocation", @class = "form-control control-input" })
    </div>
</div>

<div class="row">
    <div id="divSaleOrder" class="col-md-6 col-lg-6">
        <div class="input-icons">
            <i class="fa fa-search icon"></i>   
            <input id="inputSearch" type="text" class="form-control control-input input-field" placeholder="@Resource.SearchProduct" />
        </div>
        <div class="m-t-5 padding-5 search-div">
            <div class="row">
                <div class="col-md-3 col-lg-3">
                    <input id="inputNumber" type="hidden"/>
                    <input id="inputProductID" type="hidden"/>
                    <input id="inputCode" type="text" class="form-control control-input" placeholder="@Resource.Code" />
                </div>
                <div class="col-md-5 col-lg-5">
                    <input id="inputProductName" type="text" class="form-control control-input" placeholder="@Resource.ProductName" disabled />
                </div>
                <div id="divQuantity" class="col-md-2 col-lg-2">
                    <input id="inputQuantity" type="text" class="form-control control-input numberonly" placeholder="@Resource.Qty" />
                </div>
                <div id="divUnit" class="col-md-2 col-lg-2">
                    @Html.DropDownList("Unit", Model.Units, new { @id = "ddlUnit", @class = "form-control control-input" })
                </div>
            </div>
            <div class="row m-t-5 align-center">
                <div class="col-md-3 col-lg-3">
                    <input id="inputPrice" type="text" class="form-control control-input numberonly" placeholder="@Resource.Price" />
                </div>
                <div id="divCurrency" class="col-md-3 col-lg-3">
                    @Html.DropDownList("Currency", Model.Currencies, new { @id = "ddlCurrency", @class = "form-control control-input" })
                </div>
                <div class="col-md-4 col-lg-4">
                </div>
                <div class="col-md-2 col-lg-2" style="display:none;">
                    <input id="chkItemFOC" type="checkbox"/> <span>&nbsp;&nbsp;@Resource.FOC</span>
                </div>
                <div id="divTranBtn" class="col-md-2 col-lg-2 aligh-right">
                    <button id="btnAdd" class="btn btn-second">@Resource.Add</button>
                    <button id="btnEdit" class="btn btn-third">@Resource.Edit</button>
                </div>
            </div>
        </div>
        <div id="divSaleChild">
            <div id="divSaleTran" class="tran-table">
                <table id="tblTranSaleOrder" class="width-100-percent">
                    <thead>
                        <tr class="row tran-table-header-row">
                            <td class="col-md-4 col-lg-4 text-overflow"><span>@Resource.Product</span></td>
                            <td class="col-md-2 col-lg-2 text-overflow"><span>@Resource.Qty</span></td>
                            <td class="col-md-2 col-lg-2 text-overflow"><span>@Resource.Price</span></td>
                            <td class="col-md-2 col-lg-2 value-right text-overflow"><span>@Resource.Amount</span></td>
                            <td class="col-md-2 col-lg-2"></td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div style="bottom:0px;position:absolute;width:100%;">
                <table class="width-100-percent">
                    <tr>
                        <td class="table-border"><lable class="control-label mb-0">@Resource.TotalItems</lable></td>
                        <td class="table-border"><lable id="lblTotalItem" class="control-input mb-0">0</lable></td>
                        <td class="table-border"><lable class="control-label mb-0">@Resource.Subtotal</lable></td>
                        <td class="table-border value-right"><input id="inputHdnSubtotal" type="hidden" /><label id="lblSubtotal" class="control-input mb-0">0</label></td>
                    </tr>
                    <tr>
                        <td class="table-border"></td>
                        <td class="table-border"></td>
                        <td class="table-border"><label class="control-label mb-0">@Resource.Tax</label></td>
                        <td class="table-border value-right"><input id="inputHdnTax" type="hidden" /><label id="lblTax" class="control-input mb-0">0</label></td>
                    </tr>
                    <tr>
                        <td class="table-border"></td>
                        <td class="table-border"></td>
                        <td class="table-border"><label class="control-label mb-0">@Resource.Charges</label></td>
                        <td class="table-border value-right"><input id="inputHdnCharges" type="hidden" /><label id="lblCharges" class="control-input mb-0">0</label></td>
                    </tr>
                    <tr>
                        <td class="table-border"><label class="total-amount-label mb-0">@Resource.TotalPay</label></td>
                        <td class="table-border"></td>
                        <td class="table-border"></td>
                        <td class="table-border value-right"><input id="inputHdnTotal" type="hidden"/><lable id="lblTotal" class="total-amount-label mb-0">0</lable></td>
                    </tr>
                </table>
                <div class="row mr-0 soft-gray-background pt-1">
                    <div class="col-md-3 col-lg-3">
                        <button id="btnReset" class="btn btn-third">@Resource.Reset</button>
                        <button id="btnCancel" class="btn btn-third">@Resource.Cancel</button>
                    </div>
                    <div class="col-md-3 col-lg-3">

                    </div>                   
                    @*<div class="col-md-3 col-lg-3">
                        <button id="btnHold" class="btn btn-block btn-second">@Resource.Hold</button>
                    </div>
                    <div class="col-md-3 col-lg-3">
                        <button id="btnPrint" class="btn btn-block btn-danger">@Resource.Print</button>   
                    </div>*@
                    <div class="col-md-6 col-lg-6 aligh-right">
                        <button id="btnSave" class="btn btn-first plr-30 ">@Resource.Save</button> 
                        <button id="btnEditPayment" class="btn btn-first plr-30  m-t-0">@Resource.Edit</button>                   
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6 col-lg-6">
        @{ 
            Html.RenderPartial("_ProductMenu",Model);
        }
    </div>
</div>
<div>
    @{ 
        Html.RenderPartial("_SearchProductDialog");
    }
</div>

<script type="text/javascript">

    let tranSaleOrderAction, defaultCustomerId, defaultLocationId;
    document.getElementById('subMenuSaleOrder').className = 'active';
    $('body').addClass("hideVerticalScrollbar");
    calcSaleHeight();
    calcMenuHeight(155);

    function calcSaleHeight() {
        let windowHeight = window.innerHeight;
        let thingsHeight = 100; // average other component height
        let extraHeight = 11;
        let saleAreaHeight = windowHeight - (thingsHeight + extraHeight);
        let saleChildHeight = saleAreaHeight - 100;  // 100 is top component
        let saleTranHeight = saleChildHeight - 135 - 40;  // 135 is bottom component and 40 is extra
        document.getElementById('divSaleOrder').setAttribute("style", "height:" + saleAreaHeight + "px");
        document.getElementById('divSaleChild').setAttribute("style", "height:" + saleChildHeight + "px");
        document.getElementById('divSaleTran').setAttribute("style", "height:" + saleTranHeight + "px");
    }

    $(document).ready(function () {
        setModuleTitle('@Resource.Sale', '@Resource.AddSaleOrder');
        if ('@ViewBag.IsEdit' == 'True') fillEditData();
        else initializeControl();

        function initializeControl() {
            $('#lblUserVoucherNo').text('@ViewBag.UserVoucherNo');
            $('#inputDate').val(getTodayDate());
            showHideUnit();
            showHideCurrency();
            showHideTranSaleOrderAddEdit(false);
            showHideMainButton(false);
            defaultCustomerId = $('#ddlCustomer option:selected').val();
            defaultLocationId = $('#ddlLocation option:selected').val();
        }

        function fillEditData() {
            $('#btnEditPayment').val('@ViewBag.SaleOrderID');
            $('#lblUserVoucherNo').text('@ViewBag.UserVoucherNo');
            $('#inputDate').val('@ViewBag.Date');
            $('#inputVoucherID').val('@ViewBag.VoucherID');
            $("#ddlCustomer").val('@ViewBag.CustomerID');
            $("#ddlLocation").val('@ViewBag.LocationID');
            $('#lblSubtotal').text(separatedComma('@ViewBag.Subtotal'));
            $('#lblTax').text(separatedComma('@ViewBag.TaxAmt'));
            $('#lblCharges').text(separatedComma('@ViewBag.ChargesAmt'));
            $('#lblTotal').text(separatedComma('@ViewBag.Total'));
            $('#lblTotalItem').text('@ViewBag.TotalItem' + '(' + '@ViewBag.TotalQuantity' + ')');
            $("#inputHdnSubtotal").val('@ViewBag.Subtotal');
            $("#inputHdnTax").val('@ViewBag.TaxAmt');
            $("#inputHdnCharges").val('@ViewBag.ChargesAmt');
            $("#inputHdnTotal").val('@ViewBag.Total');
            showHideUnit();
            showHideCurrency();
            showHideTranSaleOrderAddEdit(false);
            showHideMainButton(true);
            let tranSaleOrderList = JSON.parse('@Html.Raw(Json.Encode(Session["TranSaleOrderData"]))');
            createTranSaleOrderData(tranSaleOrderList);
        }

        function showHideUnit() {
            if (isMultiUnit == "True") {
                createDefaultUnit();
                $("#divUnit").show();
            } else {
                $('#divUnit').css("display", "none");
                $('#divQuantity').addClass('col-md-4 col-lg-4');
            }

        }

        function createDefaultUnit() {
            let unit;
            $("#ddlUnit").html("");
            unit = '<option value="0">Unit</option>';
            $("#ddlUnit").append(unit);
        }

        function showHideCurrency() {
            if (isMultiCurrency == "True") {
                createDefaultCurrency();
                $('#divCurrency').show();
            }
            else {
                $('#divCurrency').css("display", "none");
                $('#divTranBtn').addClass('col-md-5 col-lg-5');
            }
        }

        function createDefaultCurrency() {
            let currency;
            currency = '<option value="0">Currency</option>';
            $('#ddlCurrency').append(currency);
        }

        function showHideMainButton(isEdit) {
            if (isEdit) {
                $('#btnSave').css("display", "none");
                $('#btnCancel').show();
                $('#btnReset').css("display", "none");
            }
            else {
                $('#btnEditPayment').css("display", "none");
                $('#btnCancel').css("display", "none");
                $('#btnReset').show();
            }

        }

        $(document).on("click", '.btnProduct', function (e) {
            let productId = $(this).val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("ProductClickAction", "ProductMenu")',
                data: { "productId": productId, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) responseUnSuccessful(response);
                    else fillSelectedProductData(response, productId);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        })

        $('#btnAdd').click(function (e) {
            addOrEditTranSaleOrder(false);
        });

        $('#btnEdit').click(function (e) {
            addOrEditTranSaleOrder(true);
        });

        $('#chkItemFOC').change(function () {
            let productId = $('#inputProductID').val();
            if (productId == "") return;
            if (this.checked) $('#inputPrice').val('0');
            else {
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetSalePriceAction", "SaleOrder")',
                    data: { "productId": productId },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        $('#inputPrice').val(response);
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText)
                    }
                });
            }

        })

        function validateProductControl() {
            if ($("#inputProductID").val().length == 0 || $("#inputProductID").val() == 0) return false;
            else if ($("#inputQuantity").val().length == 0 || $("#inputQuantity").val() == 0) {
                $("#inputQuantity").focus();
                return false;
            } else if ($("#inputPrice").val().length == 0) {
                $("inputPrice").focus();
                return false;
            }
            return true;
        }

        function addOrEditTranSaleOrder(isEdit) {
            if (validateProductControl()) {
                let unitId, currencyId, unitKeyword, currencyKeyword, isItemFOC = false;
                let number = $("#inputNumber").val();
                let productId = $("#inputProductID").val();
                let productCode = $("#inputCode").val();
                let productName = $("#inputProductName").val();
                let quantity = $("#inputQuantity").val();
                let price = $("#inputPrice").val();
                if (isMultiUnit == "True") {
                    unitId = $('#divUnit option:selected').val();
                    unitKeyword = $('#divUnit option:selected').text();
                }
                if (isMultiCurrency == "True") {
                    currencyId = $('#divCurrency option:selected').val();
                    currencyKeyword = $('#divCurrency option:selected').text();
                }
                if ($('#chkItemFOC').is(":checked")) isItemFOC = true;
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("TranSaleOrderAddEditAction", "SaleOrder")',
                    data: { "productId": productId, "productCode": productCode, "productName": productName, "quantity": quantity, "price": price, "unitId": unitId, "unitKeyword": unitKeyword, "currencyId": currencyId, "currencyKeyword": currencyKeyword, "isEdit": isEdit, "number": number, "isItemFOC": isItemFOC },
                    contentType: "application/json, charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.ResultDefaultData.IsRequestSuccess) {
                            responseUnSuccessful(response);
                        } else {
                            createTranSaleOrderData(response.LstTranSaleOrder);
                            createAmount(response);
                            clearProductControl();
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    }
                });
            }
        }

        function createTranSaleOrderData(LstTranSaleOrder) {
            let num = 0;
            $("#tblTranSaleOrder").find("tbody").empty();
            $.each(LstTranSaleOrder, function (i, item) {
                num += 1;
                if (item.UnitKeyword == null) item.UnitKeyword = '';
                if (item.CurrencyKeyword == null) item.CurrencyKeyword = '';
                let row = '<tr class="row tran-table-item-row">'
                       + '<td style="display:none;">' + item.ProductID + '</td>'
                       + '<td class="col-md-4 col-lg-4"><label class="control-label mb-0 text-link text-overflow">' + item.ProductName + '</label></td>'
                       + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.Quantity + '<span class="control-span-sm">&nbsp;' + item.UnitKeyword + '</span></label></td>'
                       + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + separatedComma(item.SalePrice) + '<span class="control-span-sm">&nbsp;' + item.CurrencyKeyword + '</span></label></td>'
                       + '<td class="col-md-2 col-lg-2 value-right"><label class="control-label mb-0">' + separatedComma(item.Amount) + '</label></td>'
                       + '<td class="col-md-2 col-lg-2 value-right"><button class="btn-icon gray" title="Delete" onclick="tranSaleOrderTableAction(3)"><i class="fa fa-remove"></i></button></td>'
                       + '<td style="display:none;">' + num + '</td>'
                       + '</tr>';
                $('#tblTranSaleOrder tbody').append(row);
            });
        }

        function createAmount(response) {
            let taxAmt, chargesAmt, totalItem;
            totalItem = response.LstTranSaleOrder.length;
            taxAmt = parseInt(calcTax(response.SubTotal));
            chargesAmt = parseInt(calcCharges(response.SubTotal));
            $('#lblSubtotal').text(separatedComma(response.SubTotal));
            $('#lblTax').text(separatedComma(taxAmt));
            $('#lblCharges').text(separatedComma(chargesAmt));
            $('#lblTotal').text(separatedComma(parseInt(calcTotal(response.SubTotal, taxAmt, chargesAmt))));
            $('#inputHdnSubtotal').val(response.SubTotal);
            $('#inputHdnTax').val(taxAmt);
            $('#inputHdnCharges').val(chargesAmt);
            $('#inputHdnTotal').val(parseInt(calcTotal(response.SubTotal, taxAmt, chargesAmt)));
            $('#lblTotalItem').text(totalItem + '@Resource.OpenParenthesis' + response.TotalQuantity + '@Resource.CloseParenthesis');
        }

        function calcTax(subtotal) {
            let tax = localStorage.getItem("Tax");
            let taxAmt = (subtotal * tax) / 100;
            return taxAmt;
        }

        function calcCharges(subtotal) {
            let charges = localStorage.getItem("Charges");
            let chargesAmt = (subtotal * charges) / 100;
            return chargesAmt;
        }

        function calcTotal(subtotal, taxAmt, chargesAmt) {
            let total = subtotal + taxAmt + chargesAmt;
            return total;
        }

        function clearProductControl() {
            $("#inputNumber").val("");
            $("#inputProductID").val("");
            $("#inputCode").val("");
            $("#inputProductName").val("");
            $("#inputQuantity").val("");
            $("#inputPrice").val("");
            $("#inputDisPercent").val("");
            $("#chkItemFOC").prop('checked', false);
            showHideUnit();
            showHideCurrency();
            showHideTranSaleOrderAddEdit(false);
        }

        $("#tblTranSaleOrder").on("click", "tbody tr", function (event) {
            $("#tblTranSaleOrder tr").removeClass("selected");
            $(this).addClass("selected");
            $(this).find("td:last").each(function () {
                let number = $(this).text();
                if (tranSaleOrderAction == 3) {
                    tranSaleOrderAction = 0;
                    deleteTranSaleOrder(number);
                }
                else {
                    prepareToEditTranSale(number);
                }
            })
        });

        function deleteTranSaleOrder(number) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("TranSaleOrderDeleteAction", "SaleOrder")',
                data: { "number": number },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess)
                        responseUnSuccessful(response);
                    else {
                        createTranSaleOrderData(response.LstTranSaleOrder);
                        createAmount(response);
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
            });
        }

        $('#btnReset').click(function (e) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CancelAction", "SaleOrder")',
                data: {},
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    clearProductControl();
                    $('#tblTranSaleOrder').find("tbody").empty();
                    clearAmount();
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },

            });
        });

        $('#btnCancel').click(function () {
            window.location.href = '@Url.Action("SaleOrder", "SaleOrder")?userId=' + userId;
        })

        $("#btnSave").click(function (e) {
            let row = $("#tblTranSaleOrder tbody tr").length;
            if (row < 1) return;
            let userVoucherNo = $('#lblUserVoucherNo').text();
            let date = $('#inputDate').val();
            let voucherId = $('#inputVoucherID').val();
            let customerId = $('#ddlCustomer option:selected').val();
            let locationId = $('#ddlLocation option:selected').val();
            let userId = localStorage.getItem("UserID");
            let tax = localStorage.getItem("Tax");
            let charges = localStorage.getItem("Charges");
            let subtotal = $("#inputHdnSubtotal").val();
            let taxAmt = $("#inputHdnTax").val();
            let chargesAmt = $("#inputHdnCharges").val();
            let total = $("#inputHdnTotal").val();
            showLoadingIcon();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveAction", "SaleOrder")',
                data: {
                    "userVoucherNo": userVoucherNo, "date": date, "voucherId": voucherId, "userId": userId, "customerId": customerId,
                    "locationId": locationId, "subtotal": subtotal, "tax": tax, "taxAmt": taxAmt, "charges": charges, "chargesAmt": chargesAmt, "total": total
                },
                contentTye: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        showToast(1, 'Saved Successfully!');
                        $("#lblUserVoucherNo").text(response.UserVoucherNo);
                        $('#inputDate').val(getTodayDate());
                        $('#inputVoucherID').val("");
                        $("#ddlCustomer").val(defaultCustomerId);
                        $("#ddlLocation").val(defaultLocationId);
                        clearProductControl();
                        $('#tblTranSaleOrder').find("tbody").empty();
                        clearAmount();
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
            });
        });

        $("#btnEditPayment").click(function (e) {
            let row = $("#tblTranSaleOrder tbody tr").length;
            if (row < 1) return;
            let saleOrderId = $(this).val();
            let date = $('#inputDate').val();
            let voucherId = $('#inputVoucherID').val();
            let customerId = $('#ddlCustomer option:selected').val();
            let locationId = $('#ddlLocation option:selected').val();
            let subtotal = $("#inputHdnSubtotal").val();
            let taxAmt = $("#inputHdnTax").val();
            let chargesAmt = $("#inputHdnCharges").val();
            let total = $("#inputHdnTotal").val();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("EditAction", "SaleOrder")',
                data: {
                    "saleOrderId": saleOrderId, "date": date, "voucherId": voucherId, "customerId": customerId, "locationId": locationId,
                    "taxAmt": taxAmt, "chargesAmt": chargesAmt, "subtotal": subtotal, "total": total
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        window.location.href = '@Url.Action("ListSaleOrder", "SaleOrder")?userId=' + userId;
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        });

        function clearAmount() {
            $('#lblSubtotal').text('0');
            $('#lblTax').text('0');
            $('#lblCharges').text('0');
            $('#lblTotal').text('0');
            $('#inputHdnSubtotal').val("");
            $('#inputHdnTax').val("");
            $('#inputHdnCharges').val("");
            $('#inputHdnTotal').val("");
            $('#lblTotalItem').text('0');
        }

        function prepareToEditTranSale(number) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("PrepareToEditTranSaleAction", "SaleOrder")',
                data: { "number": number, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        $("#inputNumber").val(number);
                        $("#inputProductID").val(response.ProductID);
                        $("#inputCode").val(response.ProductCode);
                        $("#inputProductName").val(response.ProductName);
                        $("#inputQuantity").val(response.Quantity);
                        $("#inputPrice").val(response.Price);
                        createUnitData(response);
                        createCurrencyData(response);
                        $("#ddlUnit").val(response.UnitID);
                        $("#ddlCurrency").val(response.CurrencyID);
                        if (response.IsFOC == true) $("#chkItemFOC").prop('checked', true);
                        else $("#chkItemFOC").prop('checked', false);
                        showHideTranSaleOrderAddEdit(true);
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (respone) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }

            });
        }

        $("#inputCode").keydown(function (event) {
            if (event.which == 13) {
                let productCode = $("#inputCode").val();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetProductByCodeAction", "SaleOrder")',
                    data: { "productCode": productCode, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.IsExistProduct) {
                            showToast(0, '@Inventory.Common.AppConstants.Message.NoProductByCode');
                        }
                        else {
                            $("#inputProductID").val(response.ProductID);
                            $("#inputProductName").val(response.ProductName);
                            $("#inputQuantity").val('1');
                            $("#inputPrice").val(response.SalePrice);
                            createUnitData(response);
                            createCurrencyData(response);
                            showHideTranSaleOrderAddEdit(false);
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },

                });
            }
        });

        $('#inputSearch').keydown(function (event) {
            if (event.which == 13) {
                let keyword = $('#inputSearch').val();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetProductByKeywordAction", "SaleOrder")',
                    data: { "keyword": keyword },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (response.length == 0) {
                            showToast(0, '@Inventory.Common.AppConstants.Message.NoProduct');
                        }
                        else {
                            createSearchProductData(response);
                            $('#modalSearchProduct').modal('show');
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                });
            }
        });

        function createSearchProductData(response) {
            $("#tblSearchProduct").find("tbody").empty();
            $.each(response, function (i, item) {
                var rows = "<tr class='row table-item' style='cursor:pointer;'>"
                    + "<td style='display:none;'>" + item.ProductID + "</td>"
                    + '<td class="col-md-8 col-lg-8"><label class="control-label mb-0 text-overflow">' + item.ProductName + '</label></td>'
                    + '<td class="col-md-4 col-lg-4 value-right"><label class="control-label mb-0">' + separatedComma(item.SalePrice) + '</label></td>'
                    + "</tr>";
                $('#tblSearchProduct tbody').append(rows);
            });
        }
    });

    $("#tblSearchProduct").on("click", "tbody tr", function (event) {
        $(this).find("td:first").each(function () {
            let productId = $(this).text();
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("SearchProductClickAction", "SaleOrder")',
                data: { "productId": productId, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        fillSelectedProductData(response, productId);
                        $('#modalSearchProduct').modal('hide');
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },

            });
        });
    });

    function fillSelectedProductData(response, productId) {
        $("#inputProductID").val(productId);
        $("#inputCode").val(response.Code);
        $("#inputProductName").val(response.ProductName);
        $("#inputQuantity").val('1');
        $("#inputPrice").val(response.SalePrice);
        createUnitData(response);
        createCurrencyData(response);
        showHideTranSaleOrderAddEdit(false);

    }

    function createUnitData(response) {
        let unit;
        $("#ddlUnit").html("");
        for (var i = 0; i < response.LstUnit.length; i++) {
            unit += '<option value="' + response.LstUnit[i].UnitID + '">' + response.LstUnit[i].Keyword + '</option>'
        }
        $("#ddlUnit").append(unit);
    }

    function createCurrencyData(response) {
        let currency;
        $("#ddlCurrency").html("");
        for (var i = 0; i < response.LstCurrency.length; i++) {
            currency += '<option value="' + response.LstCurrency[i].CurrencyID + '">' + response.LstCurrency[i].Keyword + '</option>';
        }
        $("#ddlCurrency").append(currency);
    }

    function showHideTranSaleOrderAddEdit(isEdit) {
        if (isEdit) {
            $('#btnAdd').css("display", "none");
            $("#btnEdit").show();
        }
        else {
            $("#btnAdd").show();
            $('#btnEdit').css("display", "none");
        }

    }

    function tranSaleOrderTableAction(value) {
        tranSaleOrderAction = value;
    }

</script>





