@using Inventory.Models
@model CompanySettingModels
@{
    Layout = "~/Views/Shared/_LayoutSetting.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/assets/js/jquery-3.2.1.min.js"></script>
    <script type="text/javascript">
        document.getElementById('menuCompanySetting').className = 'active';
    </script>
</head>

<div>
    <div class="row setup-title-layout">
        <div class="col-md-12 col-lg-12">
            <label class="page-title">Company Setting</label>
        </div>
    </div>
    <div class="row margin-20">
        <div class="col-md-12 col-lg-12">
            <div class="row setup-entry-header">
                <div class="col-md-11 col-lg-11">
                    <label class="setup-entry-header-title">Fill Company Detail</label>
                </div>
                <div class="col-md-1 col-lg-1" style="display:flex;align-items:center;justify-content:center">
                    <button id="btnRefresh" class="btn btn-light" title="Refresh"><i class="fa fa-refresh refresh-icon"></i></button>
                </div>
            </div>
            <div class="row setup-entry-border padding-20">
                <div class="col-md-6 col-md-6">
                    <div class="form-group">
                        <label class="control-label">Name</label>
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            @Html.TextBoxFor(m => m.CompanyName, null, new { @class = "form-control control-input" })
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control control-input", Value = Session["EditCompanyName"] })
                        }
                        <label id="vldName" class="text-danger" style="display:none">Name Require!</label>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Description</label>
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            @Html.TextBoxFor(m => m.Description, null, new { @class = "form-control control-input" })
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control control-input", Value = Session["EditDescription"] })
                        }
                    </div>
                    <div class="form-group">
                        <label class="control-label">Phone</label>
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            <input id="Phone" class="form-control control-input" onkeypress="return (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode >= 48 && event.charCode <= 57)" />
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            <input id="Phone" class="form-control control-input" value="@Session["EditPhone"]" onkeypress="return (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode >= 48 && event.charCode <= 57)" />
                        }
                    </div>
                    <div class="form-group">
                        <label class="control-label">Email</label>
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            <input id="Email" class="form-control control-input" onkeypress="return (event.charCode >= 64 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode >= 46 && event.charCode <= 57)" />
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            <input id="Email" class="form-control control-input" value="@Session["EditEmail"]" onkeypress="return (event.charCode >= 64 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode >= 46 && event.charCode <= 57)" />
                        }
                    </div>
                    <div class="form-group">
                        <label class="control-label">Website</label>
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            <input id="Website" class="form-control control-input" onkeypress="return (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode >= 48 && event.charCode <= 57)" />
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            <input id="Website" class="form-control control-input" value="@Session["EditWebsite"]" onkeypress="return (event.charCode >= 65 && event.charCode <= 90) || (event.charCode >= 97 && event.charCode <= 122) || (event.charCode >= 48 && event.charCode <= 57)" />
                        }
                    </div>
                    <div class="form-group">
                        <label class="control-label">Address</label>
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            @Html.TextArea("Address", null, new { @class = "form-control control-input" })
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            @Html.TextArea("Address", Session["EditAddress"].ToString(), new { @class = "form-control control-input" })
                        }
                    </div>
                </div>
                <div class="col-md-6 col-md-6">
                    <div class="form-group">
                        <label class="control-label">Logo <span style="color:red">(Size - 200px x 200px)</span> </label><br />
                        @if (ViewBag.Photo == true)
                        {
                            <img src="@Url.Content("data:image/png;base64," + Convert.ToBase64String(Model.Logo, 0, Model.Logo.Length))" id="imgPreview" style="height:80px;height:80px;" />
                        }
                        else
                        {
                            <img src="~/Image/sample.png" id="imgPreview" style="width:80px;height:80px;" />
                        }
                        <span class="btn control-label">
                            <input type="file" name="file" id="file" onchange="previewPhoto(this);" accept=".jpg,.jpeg,.png" />
                        </span>
                        <div id="error" style="display:none"><span style="color:red">Photo is larger than 200pixels!</span></div>
                    </div>

                    <div class="form-group general-div">
                        @*<div class="form-group">
                                @Html.CheckBoxFor(m => m.IsMultiBranch, new { @class = "control-input", onchange = "IsMultiBranchCheck(this.checked)", id = "chkIsMultiBranch" }) <label class="control-label">Allow Multi Branch</label>
                                <div class="row" style="padding:10px;display:none" id="divRadio">
                                    <div class="col-md-6 col-lg-6">
                                        @Html.RadioButtonFor(m => m.IsSameProductByBranch, new { id = "rdoSameProduct", onchange = "IsSameProductByBranchCheck(this.checked)" })  <label class="control-label" style="color:#09c8d0">Same Product in All Branch</label>
                                    </div>
                                    <div class="col-md-6 col-lg-6">
                                        @Html.RadioButtonFor(m => m.IsDifProductByBranch, new { id = "rdoDifProduct", onchange = "IsDifProductByBranchCheck(this.checked)" })  <label class="control-label" style="color:#09c8d0">Difference Product by Branch</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.CheckBoxFor(m => m.IsMultiUnit, new { @class = "control-input", onchange = "IsMultiUnitCheck(this.checked)", id = "chkIsMultiUnit" }) <label class="control-label">Allow Multi Unit</label>
                                <div class="row" style="padding:10px">
                                    <div class="col-md-6 col-lg-6">
                                        @Html.CheckBoxFor(m => m.IsMultiUnit, new { @class = "control-input", onchange = "IsMultiUnitCheck(this.checked)", id = "chkIsMultiUnit" }) <label class="control-label">Allow Multi Unit</label>
                                    </div>
                                    <div class="col-md-6 col-lg-6">
                                        @Html.CheckBoxFor(m => m.IsProductVariant, new { @class = "control-input", onchange = "IsProductVariantCheck(this.checked)", id = "chkProductVariant" }) <label class="control-label">Use Product Variant</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.CheckBoxFor(m => m.IsMultiCurrency, new { @class = "control-input", onchange = "IsMultiCurrencyCheck(this.checked)", id = "chkIsMultiCurrency" }) <label class="control-label">Allow Multi Currency</label>
                            </div>
                            <div class="form-group" style="display:none">
                                @Html.CheckBoxFor(m => m.IsBarcode, new { @class = "control-input", onchange = "IsBarcodeCheck(this.checked)", id = "chkBarcode" }) <label class="control-label">Use Barcode</label>
                            </div>
                            <div class="form-group" style="display:none">
                                @Html.CheckBoxFor(m => m.IsQRcode, new { @class = "control-input", onchange = "IsQRcodeCheck(this.checked)", id = "chkQRCode" }) <label class="control-label">Use QR Code</label>
                            </div>
                            <div class="form-group">
                                @Html.CheckBoxFor(m => m.IsProductPhoto, new { @class = "control-input", onchange = "IsProductPhotoCheck(this.checked)", id = "chkPhotoInProduct" }) <label class="control-label">Use Photo in Product</label>
                            </div>*@
                        <div class="form-group">
                            @Html.CheckBoxFor(m => m.IsUseTaxServiceCharges, new { @class = "control-input", onchange = "IsUseTaxServiceChargesCheck(this.checked)", id = "chkTaxServiceCharges" }) <label class="control-label">Tax & Service Charges</label>
                        </div>
                        <div class="form-group" id="divTax" style="display:none">
                            <label class="control-label">Tax(%)</label>
                            @if (Session["IsEdit"].ToString() == "0")
                            {
                                @Html.TextBoxFor(m => m.Tax, null, new { @class = "form-control control-input number", @type = "number", @min = "0", @max = "100" })
                            }
                            else if (Session["IsEdit"].ToString() == "1")
                            {
                                @Html.TextBoxFor(m => m.Tax, new { @class = "form-control control-input number", Value = Session["EditTax"], @type = "number", @min = "0", @max = "100" })
                            }
                        </div>
                        <div class="form-group" id="divServiceCharges" style="display:none">
                            <label class="control-label">Service Charges(%)</label>
                            @if (Session["IsEdit"].ToString() == "0")
                            {
                                @Html.TextBoxFor(m => m.ServiceCharges, null, new { @class = "form-control control-input number", @type = "number", @min = "0", @max = "100" })
                            }
                            else if (Session["IsEdit"].ToString() == "1")
                            {
                                @Html.TextBoxFor(m => m.ServiceCharges, new { @class = "form-control control-input number", Value = Session["EditServiceCharges"], @type = "number", @min = "0", @max = "100" })
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        @if (Session["IsEdit"].ToString() == "0")
                        {
                            <button id="btnSave" class="btn btn-first setup-btn-save-edit">Save</button>
                        }
                        else if (Session["IsEdit"].ToString() == "1")
                        {
                            <button id="btnEdit" class="btn btn-first setup-btn-save-edit">Save</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

        var isMultiBranch = false, isUserTaxServiceCharges = false, isMultiUnit = false, isMultiCurrency = false, isBarcode = false;
        var isQRcode = false, isProductVariant = false, isProductPhoto = false, isDifProductByBranch=false;

        $(function () {

            var _URL = window.URL || window.webkitURL;
            $("#file").change(function (e) {
                var file, img;
                if ((file = this.files[0])) {
                    img = new Image();
                    img.onload = function () {
                        var width = this.width;
                        var height = this.height;
                        if (width > 200 || height > 200) {
                            $("#error").show();
                            $('#file').val('');
                        }
                        else {
                            var file = e.target.files;
                            if (file.length > 0) {
                                if (window.FormData !== undefined) {
                                    var data = new FormData();
                                    for (var x = 0; x < file.length; x++) {
                                        data.append("file" + x, file[x]);
                                    }

                                    $.ajax({
                                        type: "POST",
                                        url: '@Url.Action("UploadFile", "CompanySetting")',
                                        contentType: false,
                                        processData: false,
                                        data: data,
                                        success: function (result) {
                                            $('#image').attr('src', '@Url.Content("~/Content/img/")' + result.fileName);
                                        },
                                        error: function (xhr, status, p3, p4) {
                                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                                            if (xhr.responseText && xhr.responseText[0] == "{")
                                                err = JSON.parse(xhr.responseText).Message;
                                            console.log(err);
                                        }
                                    });
                                } else {
                                    alert("This browser doesn't support HTML5 file uploads!");
                                }
                            };
                        }
                    };
                    img.src = _URL.createObjectURL(file);
                }
            });

            $('#btnSave').click(function () {
                var companyName = $('#CompanyName').val();
                var description = $('#Description').val();
                var phone = $('#Phone').val();
                var email = $('#Email').val();
                var website = $('#Website').val();
                var address = $('#Address').val();
                var tax = $('#Tax').val();
                var serviceCharges = $('#ServiceCharges').val();

                if (companyName.length == 0) {
                    $("#vldName").show();
                    vldOk = 0;
                } else {
                    vldOk = 1;
                }
                if (vldOk == 1) {
                    showLoadingIcon();
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("SaveAction", "CompanySetting")',
                        data: { "companyName": companyName, "description": description, "phone": phone, "email": email, "website": website, "address": address, "tax": tax, "serviceCharges": serviceCharges, "isMultiBranch": isMultiBranch, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency, "isBarcode": isBarcode, "isQRcode": isQRcode, "isProductVariant": isProductVariant, "isProductPhoto": isProductPhoto, "isDifProductByBranch": isDifProductByBranch },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            hideLoadingIcon();
                            $("#vldName").hide();                            
                            $("#btnSave").hide();
                            showToast(1, response.MESSAGE);
                        },
                        failure: function (response) {
                            hideLoadingIcon();
                            alert(response.responseText);
                        },
                        error: function (response) {
                            hideLoadingIcon();
                            alert(response.responseText);
                        }
                    });
                }
            });

            $('#btnEdit').click(function () {
                var companyName = $('#CompanyName').val();
                var description = $('#Description').val();
                var phone = $('#Phone').val();
                var email = $('#Email').val();
                var website = $('#Website').val();
                var address = $('#Address').val();
                var tax = $('#Tax').val();
                var serviceCharges = $('#ServiceCharges').val();

                if (companyName.length == 0) {
                    $("#vldName").show();
                    vldOk = 0;
                } else {
                    vldOk = 1;
                }
                if (vldOk == 1) {
                    showLoadingIcon();
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("EditAction", "CompanySetting")',
                        data: { "companyName": companyName, "description": description, "phone": phone, "email": email, "website": website, "address": address, "tax": tax, "serviceCharges": serviceCharges, "isMultiBranch": isMultiBranch, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency, "isBarcode": isBarcode, "isQRcode": isQRcode, "isProductVariant": isProductVariant, "isProductPhoto": isProductPhoto, "isDifProductByBranch": isDifProductByBranch },
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            hideLoadingIcon();
                            $("#vldName").hide();
                            showToast(1, response.MESSAGE);
                        },
                        failure: function (response) {
                            hideLoadingIcon();
                            alert(response.responseText);
                        },
                        error: function (response) {
                            hideLoadingIcon();
                            alert(response.responseText);
                        }
                    });
                }
            });

            $('#btnRefresh').click(function () {
                window.location.reload();
            });

            $("#CompanyName").keypress(function () {
                $("#vldName").hide();
            });

            $(".number").keypress(function (e) {
                var txt = String.fromCharCode(e.which);
                if (!txt.match(/^[0-9]*$/)) {
                    return false;
                }
            });

            var isEdit = '@Session["IsEdit"]';
            if (isEdit == 1) {
                var editIsMultiBranch = '@Session["EditIsMultiBranchVal"]';
                if (editIsMultiBranch == 1) {
                    $("#chkIsMultiBranch").prop("checked", true);
                    $("#divRadio").hide();
                    isMultiBranch = true;
                } else if (editIsMultiBranch == 0) {
                    $("#chkIsMultiBranch").prop("checked", false);
                    $("#divRadio").hide();
                    isMultiBranch = false;
                }

                var editIsDifProductByBranch = '@Session["EditIsDifProductByBranchVal"]';
                if (editIsDifProductByBranch == 1) {
                    $("#IsDifProductByBranch").attr("checked", true);
                    $("#IsSameProductByBranch").attr("checked", false);
                    isDifProductByBranch = true;
                } else if (editIsDifProductByBranch == 0) {
                    $("#IsDifProductByBranch").attr("checked", false);
                    $("#IsSameProductByBranch").attr("checked", true);
                    isDifProductByBranch = false;
                }

                var editIsTaxCharges = '@Session["EditIsTaxChargesVal"]';
                if (editIsTaxCharges == 1) {
                    $("#chkTaxServiceCharges").prop("checked", true);
                    $("#divTax").show();
                    $("#divServiceCharges").show();
                    isUserTaxServiceCharges = true;
                } else if (editIsTaxCharges == 0) {
                    $("#chkTaxServiceCharges").prop("checked", false);
                    $("#divTax").hide();
                    $("#divServiceCharges").hide();
                    isUserTaxServiceCharges = false;
                }

                var editIsMultiCurrency = '@Session["EditIsMultiCurrencyVal"]';
                if (editIsMultiCurrency == 1) {
                    $("#chkIsMultiCurrency").prop("checked", true);
                    isMultiCurrency = true;
                } else if (editIsMultiCurrency == 0) {
                    $("#chkIsMultiCurrency").prop("checked", false);
                    isMultiCurrency = false;
                }

                var editIsMultiUnit = '@Session["EditIsMultiUnitVal"]';
                if (editIsMultiUnit == 1) {
                    $("#chkIsMultiUnit").prop("checked", true);
                    isMultiUnit = true;
                } else if (editIsMultiUnit == 0) {
                    $("#chkIsMultiUnit").prop("checked", false);
                    isMultiUnit = false;
                }

                var editIsBarcode = '@Session["EditIsBarcodeVal"]';
                if (editIsBarcode == 1) {
                    $("#chkBarcode").prop("checked", true);
                    isBarcode = true;
                } else if (editIsBarcode == 0) {
                    $("#chkBarcode").prop("checked", false);
                    isBarcode = false;
                }

                var editIsQRcode = '@Session["EditIsQRcodeVal"]';
                if (editIsQRcode == 1) {
                    $("#chkQRCode").prop("checked", true);
                    isQRcode = true;
                } else if (editIsQRcode == 0) {
                    $("#chkQRCode").prop("checked", false);
                    isQRcode = false;
                }

                var editIsProductVariant = '@Session["EditIsProductVariantVal"]';
                if (editIsProductVariant == 1) {
                    $("#chkProductVariant").prop("checked", true);
                    isProductVariant = true;
                } else if (editIsProductVariant == 0) {
                    $("#chkProductVariant").prop("checked", false);
                    isProductVariant = false;
                }

                var editIsProductPhoto = '@Session["EditIsProductPhotoVal"]';
                if (editIsProductPhoto == 1) {
                    $("#chkPhotoInProduct").prop("checked", true);
                    isProductPhoto = true;
                } else if (editIsProductPhoto == 0) {
                    $("#chkPhotoInProduct").prop("checked", false);
                    isProductPhoto = false;
                }
            }

        });

    function previewPhoto(input) {
        img = new Image();
        var objectURL = window.URL.createObjectURL(input.files[0]);
        img.onload = function () {
            if (this.width > 200 || this.height > 200) {
                $("#error").show();
                $('#file').val('');
            }
            else {
                document.getElementById('imgPreview').src = objectURL;
            }
        }
        img.src = objectURL;

    };


        function IsMultiBranchCheck(checked) {
            if (checked == true) {
                $("#divRadio").hide();
                isMultiBranch = true;
            }
            else {
                $("#divRadio").hide();
                isMultiBranch = false;
            }
        }
        function IsUseTaxServiceChargesCheck(checked) {
            if (checked == true) {
                $("#divTax").show();
                $("#divServiceCharges").show();
                isUserTaxServiceCharges = true;
            }
            else {
                $("#divTax").hide();
                $("#divServiceCharges").hide();
                isUserTaxServiceCharges = false;
                $('#Tax').val('0');
                $('#ServiceCharges').val('0');
            }
        }
        //function IsSameProductByBranchCheck(checked) {
        //    alert("HI");
        //    if (checked == true) {
        //        $("#IsDifProductByBranch").attr("checked", false);
        //        isDifProductByBranch = false;
        //    }
        //    else {
        //        $("#IsDifProductByBranch").attr("checked", true);
        //        isDifProductByBranch = true;
        //    }
        //}
        //function IsDifProductByBranchCheck(checked) {
        //    alert("HI");
        //    if (checked == true) {
        //        $("#IsSameProductByBranch").attr("checked", false);
        //        isDifProductByBranch = true;
        //    }
        //    else {
        //        $("#IsSameProductByBranch").attr("checked", true);
        //        isDifProductByBranch = false;
        //    }
        //}
        function IsMultiUnitCheck(checked) {
            if (checked == true) {
                isMultiUnit = true;
            }
            else {
                isMultiUnit = false;
            }
        }
        function IsMultiCurrencyCheck(checked) {
            if (checked == true) {
                isMultiCurrency = true;
            }
            else {
                isMultiCurrency = false;
            }
        }
        function IsBarcodeCheck(checked) {
            if (checked == true) {
                isBarcode = true;
                alert(checked)
            }
            else {
                isBarcode = false;
                alert(checked)
            }
        }
        function IsQRcodeCheck(checked) {
            if (checked == true) {
                isQRcode = true;
            }
            else {
                isQRcode = false;
            }
        }
        function IsProductVariantCheck(checked) {
            if (checked == true) {
                isProductVariant = true;
            }
            else {
                isProductVariant = false;
            }
        }
        function IsProductPhotoCheck(checked) {
            if (checked == true) {
                isProductPhoto = true;
            }
            else {
                isProductPhoto = false;
            }
        }

</script>



