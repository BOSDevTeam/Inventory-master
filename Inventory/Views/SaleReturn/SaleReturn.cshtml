@using Inventory.ViewModels;
@model MasterSaleReturnViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link href="~/Content/Site.css" rel="stylesheet" />
    <script src="~/assets/js/jquery-3.2.1.min.js"></script>

    <style type="text/css">
        #subMenuSaleGp {
            display: block;
        }

         .changecursor tbody tr{
            cursor:not-allowed;   
            background-color:#e9ecef;       
        }
        .changecursor tbody tr:hover{
            cursor:not-allowed;
        }
        .changecursor label{
            cursor:not-allowed;
        }
        .changecursor label:hover{
            cursor:not-allowed;
        }

    </style>
</head>

<div class="row m-t-5 m-b-5 m-l-5">
    <div class="col-md-4 col-lg-4 note align-justify-center">
        <label id="lblUserVoucherNo" class="control-label mb-0"></label>
    </div>
    <div class="col-md-4 col-lg-4">
        <input id="inputDate" type="date" class="form-control control-input" />
    </div>
    <div class="col-md-4 col-lg-4">
        <input id="inputVoucherID" type="text" placeholder="@Resource.VoucherID" class="form-control control-input"/>
    </div>
</div>

<div class="row">
    <div id="divSaleReturn" class="col-md-6 col-lg-6">
        <div id="divReturnByVoucher" class="m-t-5 padding-5 search-div">
            <div class="row">
                <input id="inputNumber" type="hidden" />
                <input id="lblID" type="hidden" />
                <input id="lblSaleID" type="hidden" />
                <input id="lblDisPercent" type="hidden" />
                <input id="inputReturnVoucherNo" type="hidden"/>
                <input id="inputProductID" type="hidden" />
                <input id="inputUnitID" type="hidden"/>
                <input id="inputUnitKeyword" type="hidden" />
                <input id="inputCurrencyID" type="hidden" />
                <input id="inputCurrencyKeyword" type="hidden" />
                <input id="inputLocationID" type="hidden" />
                <input id="originalQuantity" type="hidden" />
                <div class="col-md-8 col-lg-8">
                    <input type="text" id="inputProductName" class="form-control control-input" placeholder="@Resource.ProductName" disabled />
                </div>
                <div id="divQuantity" class="col-md-3 col-lg-3">
                    <input type="text" id="inputQuantity" class="form-control control-input numberonly" placeholder="@Resource.ReturnQty"/>
                </div>
                <div id="divUnit" class="col-md-1 col-lg-1 note align-justify-center">
                    <label id="lblUnitName" class="control-label mb-0">UNIT</label>
                </div>
            </div>

            <div class="row m-t-5 align-center">
                <div class="col-md-4 col-lg-4">
                    <input type="text" id="inputPrice" class="form-control control-input" placeholder="@Resource.Price" disabled/>
                </div>
                <div id="divCurrency" class="col-md-1 col-lg-1 note align-justify-center">
                    <label id="lblCurrency" class="control-label mb-0">MMK</label>
                </div>
                <div class="col-md-4 col-lg-4">
                    <input type="text" id="inputDisPercent" class="form-control control-input" placeholder="@Resource.Dis (@Resource.PercentSign)" disabled/>
                </div>
                <div id="divTranBtn" class="col-md-3 col-lg-3 aligh-right">
                    <button id="btnAdd" class="btn btn-second">@Resource.Add</button>
                    <button id="btnEdit" class="btn btn-third">@Resource.Edit</button>
                </div>
            </div>
        </div>

        <div id="divReturnByProduct" class="m-t-5 padding-5 search-div">
            <div class="input-icons">
                <i class="fa fa-search icon"></i>
                <input id="inputSearchReturnProduct" type="text" class="form-control control-input input-field" placeholder="@Resource.SearchProduct" />
            </div>
            <div class="m-t-5 padding-5 search-div">
                <div class="row">
                    <div class="col-md-3 col-lg-3">
                        <input id="inputReturnNumber" type="hidden" />
                        <input id="inputReturnProductID" type="hidden" />
                        <input id="inputReturnProductCode" type="text" class="form-control control-input" placeholder="@Resource.Code" />
                    </div>
                    <div class="col-md-5 col-lg-5">
                        <input id="inputReturnProductName" type="text" class="form-control control-input" placeholder="@Resource.ProductName" disabled />
                    </div>
                    <div class="col-md-2 col-lg-2" id="divReturnQuantity">
                        <input id="inputReturnProductQuantity" type="text" class="form-control control-input numberonly" placeholder="@Resource.ReturnQty" />
                    </div>
                    <div id="divddlUnit" class="col-md-2 col-lg-2">
                        @Html.DropDownList("Unit", Model.Units, new { @id = "ddlUnit", @class = "form-control control-input" })
                    </div>
                </div>
                <div class="row m-t-5 align-center">
                    <div class="col-md-3 col-lg-3">
                        <input id="inputReturnProductPrice" type="text" class="form-control control-input numberonly" placeholder="@Resource.Price" />
                    </div>
                    <div id="divddlCurrency" class="col-md-3 col-lg-3">
                        @Html.DropDownList("Currency", Model.Currencies, new { @id = "ddlCurrency", @class = "form-control control-input" })
                    </div>
                    <div class="col-md-2 col-lg-2">
                        <input id="inputReturnProductDisPercent" type="text" class="form-control control-input numberonly" placeholder="@Resource.Dis@Resource.OpenParenthesis@Resource.PercentSign@Resource.CloseParenthesis" maxlength="2" />
                    </div>
                    <div class="col-md-2 col-lg-2">
                        <input id="chkItemFOC" type="checkbox" /><span>&nbsp;&nbsp;@Resource.FOC</span>
                    </div>
                    <div id="divReturnProductTranBtn" class="col-md-2 col-lg-2 aligh-right">
                        <button id="btnAddReturnProduct" class="btn btn-second">@Resource.Add</button>
                        <button id="btnEditReturnProduct" class="btn btn-third">@Resource.Edit</button>
                    </div>
                </div>
            </div>
        </div>

        <div id="divTranSaleReturnChild">
            <div id="divTranSaleReturn" class="tran-table" style="margin-top:5px">
                <table id="tblTranSaleReturn" class="width-100-percent">
                    <thead>
                        <tr class="row tran-table-header-row">
                            <td class="col-md-4 col-lg-4"><span>@Resource.Product</span></td>
                            <td class="col-md-2 col-lg-2"><span>@Resource.Qty</span></td>
                            <td class="col-md-2 col-lg-2"><span>@Resource.Price</span></td>
                            <td class="col-md-1 col-lg-1"><span>@Resource.Dis</span></td>
                            <td class="col-md-2 col-lg-2"><span>@Resource.Amount</span></td>
                            <td class="col-md-1 col-lg-1"></td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div id="divTranSaleReturnByProduct" class="tran-table">
                <table id="tblTranSaleReturnByProduct" class="width-100-percent">
                    <thead>
                        <tr class="row tran-table-header-row">
                            <td class="col-md-4 col-lg-4 text-overflow"><span>@Resource.Product</span></td>
                            <td class="col-md-2 col-lg-2 text-overflow"><span>@Resource.Qty</span></td>
                            <td class="col-md-2 col-lg-2 text-overflow"><span>@Resource.Price</span></td>
                            <td class="col-md-1 col-lg-1 text-overflow"><span>@Resource.Dis</span></td>
                            <td class="col-md-2 col-lg-2 text-overflow"><span class="aligh-right">@Resource.Amount</span></td>
                            <td class="col-md-1 col-lg-1"></td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>


            <div style="bottom:0px;position:absolute;width:100%;">
                <table class="width-100-percent">
                    <tr>
                        <td class="col-md-5 col-lg-5 text-overflow table-border"><span>@Resource.Total</span></td>
                        <td class="col-md-3 col-lg-3 table-border"></td>
                        <td class="col-md-4 col-lg-4 table-border value-right"><input id="inputHdnTotal" type="hidden" /><span id="lblTotalAmount">0</span></td>
                    </tr>
                </table>
                <div class="row mr-0 soft-gray-background pt-1">
                    <div class="col-md-6 col-lg-6">
                        <button id="btnReset" class="btn btn-third">@Resource.Reset</button>
                        <button id="btnCancel" class="btn btn-third">@Resource.Cancel</button>
                    </div>
                    <div class="col-md-6 col-lg-6 aligh-right">
                        <button id="btnContinue" class="btn btn-first plr-30">@Resource.Continue</button>
                        <button id="btnCEdit" class="btn btn-first plr-30 m-t-0">@Resource.Edit</button>
                    </div>
                </div>
            </div>
        </div>



    </div>

    <div  id="divSale" class="col-md-6 col-lg-6 divSale div-return">
        <div class="row margin-5 padding-10">
            <div class="col-md-4 col-lg-4"></div>
            <div class="col-md-4 col-lg-4"><input type="radio" id="rdoRetrunByVoucher" name="rdoReturnType" value="1" checked class="mr-10" /><span>@Resource.ReturnByVoucher</span></div>
            <div class="col-md-4 col-lg-4"><input type="radio" id="rdoReturnByProduct" name="rdoReturnType" value="2" class="mr-10" /><span>@Resource.ReturnByProduct</span></div>
        </div>
        <div class="margin-5">
            <input id="inputSearch" type="text" class="form-control control-input" placeholder="@Resource.EnterSaleVoucherNo" />
            <div style="display:none" id="PaymentID"></div>
        </div>

        <div style="margin-top:10px">
            <label>@Resource.TotalSaleItems:&nbsp;&nbsp;&nbsp;<span id="lblTotalItem" style="background-color:#ffffcc;padding:5px;">0</span></label>
        </div>

        <div id="divTranChild">
            <div id="divTranSale" class="tran-table " style="margin-top:5px">
                <table id="tblTranSale" class="width-100-percent">
                    <thead>
                        <tr class="row return-table-header-row">
                            <td class="col-md-4 col-lg-4"><span>@Resource.Product</span></td>
                            <td class="col-md-2 col-lg-2"><span>@Resource.Qty</span></td>
                            <td class="col-md-2 col-lg-2"><span>@Resource.Price</span></td>
                            <td class="col-md-2 col-lg-2"><span>@Resource.Dis</span></td>
                            <td class="col-md-2 col-lg-2"><span class="aligh-right m-r-10">@Resource.Amount</span></td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div>
    @{ 
        Html.RenderPartial("_RemarkDialog");
    }
</div>
<div>
    @{
        Html.RenderPartial("_SearchProductDialog");
    }
</div>


<script type="text/javascript">

    let tranSaleReturnAction, isEditTranSaleReturn, isReturnByVoucher = true, isEditTranSaleReturnByProduct = false, tranSaleReturnByProductAction, prevSalePrice;
    document.getElementById('subMenuSaleReturn').className = 'active';
    $('body').addClass("hideVerticalScrollbar");

    calcTranSaleReturnHeight();
    calcTranSaleHeight();

    function calcTranSaleReturnHeight() {
        let windowHeight = window.innerHeight;
        let thingsHeight = 100; // average other component height
        let extraHeight = 11;
        let saleReturnAreaHeight = windowHeight - (thingsHeight + extraHeight);
        let saleReturnChildHeight = saleReturnAreaHeight - 100;  // 100 is top component
        let saleReturnTranHeight = saleReturnChildHeight - 40 - 40;  // 135 is bottom component and 40 is extra
        document.getElementById('divSaleReturn').setAttribute("style", "height:" + saleReturnAreaHeight + "px");
        document.getElementById('divTranSaleReturnChild').setAttribute("style", "height:" + saleReturnChildHeight + "px");
        document.getElementById('divTranSaleReturn').setAttribute("style", "height:" + saleReturnTranHeight + "px");
    }

    function calcTranSaleHeight() {
        let windowHeight = window.innerHeight;
        let thingsHeight = 50; // average other component height
        let extraHeight = 10;
        let saleAreaHeight = windowHeight - (thingsHeight + extraHeight);
        let saleChildHeight = saleAreaHeight - 100;  // 100 is top component
        let saleTranHeight = saleChildHeight - 20 - 40;  // 135 is bottom component and 40 is extra
        document.getElementById('divSale').setAttribute("style", "height:" + saleAreaHeight + "px");
        document.getElementById('divTranChild').setAttribute("style", "height:" + saleChildHeight + "px");
        document.getElementById('divTranSale').setAttribute("style", "height:" + saleTranHeight + "px");
    }

    $(document).ready(function () {
        setModuleTitle('@Resource.Sale', '@Resource.AddSaleReturn');
        if ('@ViewBag.IsEdit' == 'True') fillEditData();
        else initializeControl();

        function initializeControl() {
            $('#lblUserVoucherNo').text('@ViewBag.UserVoucherNo');
            $('#inputDate').val(getTodayDate());
            showHideTranSaleReturnAddEdit(false);
            showHideMainButton(false);
            showHideUnit();
            showHideCurrency();

            $("#divReturnByProduct").css("display", 'none');
            $("#divTranSaleReturnByProduct").css("display", "none");

        }

        $("input[name='rdoReturnType']").change(function (e) {
            let target = e.target;
            if (target.value == 1) {
                $("#divReturnByProduct").css("display", 'none');
                $("#divReturnByVoucher").css("display", 'block');
                $("#inputSearch").prop("disabled", false);
                $("#divReturnByProduct").css("display", 'none');
                $("#divTranSaleReturnByProduct").css("display", "none");
                $("#divReturnByVoucher").css("display", 'block');
                $("#divTranSaleReturn").css("display", "block");
                isReturnByVoucher = true;
            }
            else {
                $("#divReturnByProduct").css("display", 'block');
                $("#divReturnByVoucher").css("display", 'none');
                $("#inputSearch").val("");
                $("#inputSearch").prop("disabled", true);
                $("#tblTranSale").find("tbody").empty();
                $("#lblTotalItem").text("");
                $("#divReturnByProduct").css("display", 'block');
                $("#divTranSaleReturnByProduct").css("display", "block");
                $("#divReturnByVoucher").css("display", 'none');
                $("#divTranSaleReturn").css("display", "none");
                if (isMultiUnit=="True")
                {
                    createDefaultUnit();
                    $("#divddlUnit").css("display", "block");
                }
                else {
                    $("#divddlUnit").css("display", "none");
                    $("#divReturnQuantity").addClass("col-md-4 col-lg-4");
                }
                if (isMultiCurrency == "True") {
                    createDefaultCurrency();
                    $("#divddlCurrency").css("display", "block");

                }
                else {
                    $("#divddlCurrency").css("display", "none");
                    $("#divReturnProductTranBtn").addClass("col-md-5 col-lg-5");
                }
                showHideTranSaleReturnAddEditByProduct(false);
                isReturnByVoucher = false;
            }
        })

        function showHideUnit() {
            if (isMultiUnit == "True") {
                $("#divUnit").show();
            }
            else {
                $('#divUnit').css("display", "none");
                $('#divQuantity').addClass("col-md-4 col-lg-4");
            }
        }
        function showHideCurrency() {
            if (isMultiCurrency == "True") {
                $("#divTranBtn").removeClass("col-md-4 col-lg-4");
                $('#divTranBtn').addClass("col-md-3 col-lg-3");
                $("#divCurrency").css("display", "block");
            }
            else {
                $('#divCurrency').css("display", "none");
                $('#divTranBtn').addClass("col-md-4 col-lg-4");
            }
        }
        function createDefaultUnit() {
            let unit;
            $("#ddlUnit").html("");
            unit = '<option value="0">Unit</option>';
            $("#ddlUnit").append(unit);
        }
        function createDefaultCurrency() {
            let currency;
            $("#ddlCurrency").html("");
            currency = '<option value="0">Currency</option>';
            $("#ddlCurrency").append(currency);
        }



        $('#inputSearch').keydown(function (e) {
            if (e.which == 13) {
                let keyword = $('#inputSearch').val();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("SearchActionByPaymentID", "SaleReturn")',
                    data: { "keyword": keyword },
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.IsExistPurchase) {
                            showToast(0, '@Inventory.Common.AppConstants.Message.NoProductByCode');
                            $('#tblTranSale').find("tbody").empty();
                            $('#lblTotalItem').text("");

                        }
                        else {
                            if (!response.IsVoucherFOC) {
                                let totalItem = response.List.length;
                                $('#lblTotalItem').text(totalItem + '@Resource.OpenParenthesis' + response.TotalQuantity + '@Resource.CloseParenthesis');
                                createTranSaleData(response.List);
                                $("#tblTranSaleReturn").find("tbody").empty();
                            }
                            else {
                                showToast(0, response.ResultDefaultData.Message);
                                $("#inputSearch").val("");
                            }
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                });
            }
        })

        function createTranSaleData(List) {
            let num = 0;
            $('#tblTranSale').find("tbody").empty();
            $.each(List, function (i, item) {
                num += 1;
                var row = '<tr class="row tran-table-item-row">'
                        + '<td style="display:none;">' + item.ProductID + '</td>'
                        + '<td class="col-md-4 col-lg-4"><label class="control-label mb-0 text-link text-overflow">' + item.ProductName + '</label></td>'
                        + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.Quantity + '<span class="control-span-sm">&nbsp;' + item.UnitKeyword + '</span></label></td>'
                        + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0 text-link text-overflow">' + separatedComma(item.SalePrice) + '<span class="control-span-sm">&nbsp;' + item.CurrencyKeyword + '</span></label></td>'
                        + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0 text-link text-overflow">' + separatedComma(item.Discount) + '</label></td>'
                        + '<td class="col-md-2 col-lg-2 value-right"><label class="control-label mb-0 text-link text-overflow">' + separatedComma(item.Amount) + '</label></td>'
                        + '<td style="display:none">' + num + '</td>'
                $('#tblTranSale tbody').append(row);
            });
        }

        $('#tblTranSale').on("click", "tbody tr", function () {
            $('#tblTranSale tr').removeClass("selected");
            $(this).addClass("selected");
            $(this).find("td:last").each(function () {
                let number = $(this).text();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("SaleClickAction", "SaleReturn")',
                    data: { "number": number },
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.ResultDefaultData.IsRequestSuccess)
                            responseUnSuccessful(response);
                        else {

                            fillSelectedSaleData(response);
                            isEditTranSaleReturn = false;
                            showHideTranSaleReturnAddEdit(false);
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                });
            })
        });

        function fillSelectedSaleData(response) {
            $('#lblID').val(response.ID);
            $('#lblSaleID').val(response.SaleID);
            $('#inputProductID').val(response.ProductID);
            $('#inputLocationID').val(response.LocationID);
            $('#inputProductName').val(response.ProductName);
            $('#inputQuantity').val(response.Quantity);
            $('#originalQuantity').val(response.InputQuantity);
            $('#lblUnitName').text(response.UnitName);
            $('#inputUnitID').val(response.UnitID);
            $('#inputPrice').val(response.SalePrice);
            $('#lblDisPercent').val(response.DisPercent);
            if (response.DisPercent != 0) $("#inputDisPercent").val(response.DisPercent + '@Resource.PercentSign');
            else $("#inputDisPercent").val(0 + '@Resource.PercentSign');
            $('#inputCurrencyID').val(response.CurrencyID);
            $('#inputCurrencyKeyword').val(response.CurrencyKeyword);
            $("#lblCurrency").text(response.CurrencyKeyword);
        }

        $('#btnAdd').click(function () {
            addOrEditTranSaleReturn(false);
        });

        $('#inputQuantity').keydown(function (e) {
            if (e.which == 13) {
                addOrEditTranSaleReturn(isEditTranSaleReturn);
            }
        });

        $('#btnEdit').click(function () {
            addOrEditTranSaleReturn(true);

        });



        function validateTranSaleReturnControl() {
            if ($('#inputProductID').val().length == 0 || $('#inputProductID').val() == 0) return false;
            else return true;
        }

        function addOrEditTranSaleReturn(isEdit) {
            if (validateTranSaleReturnControl()) {
                let id = $("#lblID").val();
                let saleId = $('#lblSaleID').val();
                let productId = $('#inputProductID').val();
                let locationId = $('#inputLocationID').val();
                let productName = $('#inputProductName').val();
                let inputQuantity = parseInt($('#inputQuantity').val());
                let oquantity = $('#originalQuantity').val();
                let unitId = $('#inputUnitID').val();
                let unitKeyword = $('#lblUnitName').text();
                let currencyId = $('#inputCurrencyID').val();
                let currencyKeyword = $('#inputCurrencyKeyword').val();
                let price = $('#inputPrice').val();
                let disPercent = $('#lblDisPercent').val();
                let number = $('#inputNumber').val();
                if (isNaN(inputQuantity) || inputQuantity == 0) return false;
                if (inputQuantity <= oquantity) {
                    showLoadingIcon();
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("TranSaleReturnAddEditAction", "SaleReturn")',
                        data: { "saleId": saleId, "productId": productId, "locationId": locationId, "productName": productName, "inputQuantity": inputQuantity, "oquantity": oquantity, "price": price, "disPercent": disPercent, "unitId": unitId, "unitKeyword": unitKeyword, "currencyId": currencyId, "currencyKeyword": currencyKeyword, "number": number, "isEdit": isEdit },
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            hideLoadingIcon();
                            if (!response.ResultDefaultData.IsRequestSuccess) {
                                responseUnSuccessful(response);
                            }
                            else {
                                createTranSaleReturnData(response.List);
                                $('#lblTotalAmount').text(separatedComma(response.TotalAmount));
                                $('#inputHdnTotal').val(response.TotalAmount);
                                clearTranSaleReturnControl();
                                showHideTranSaleReturnAddEdit(false);
                            }

                        },
                        failure: function (response) {
                            hideLoadingIcon();
                            alert(response.responseText);
                        },
                        error: function (response) {
                            hideLoadingIcon();
                            alert(response.responseText);
                        },
                    });
                }
                else {
                    showToast(0, '@Inventory.Common.AppConstants.Message.SaleReturnQtyCheck');
                }

            }

        }

        function createTranSaleReturnData(List) {
            let num = 0;
            $('#tblTranSaleReturn').find("tbody").empty();
            $.each(List, function (i, item) {
                num += 1;
                if (item.UnitKeyword == null) item.UnitKeyword = "";
                if (item.CurrencyKeyword == null) item.CurrencyKeyword = "";
                var row = '<tr class="row tran-table-item-row">'
                        + '<td style="display:none;">' + item.ProductID + '</td>'
                        + '<td class="col-md-4 col-lg-4"><label class="control-label mb-0 text-link text-overflow">' + item.ProductName + '</label></td>'
                        + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.Quantity + '<span class="control-span-sm">&nbsp;' + item.UnitKeyword + '</span></label></td>'
                        + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0 text-link text-overflow">' + separatedComma(item.SalePrice) + '<span class="control-span-sm">&nbsp;' + item.CurrencyKeyword + '</span></label></td>'
                        + '<td class="col-md-1 col-lg-1"><label class="control-label mb-0 text-link text-overflow">' + separatedComma(item.Discount) + '</label></td>'
                        + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0 text-link text-overflow">' + separatedComma(item.Amount) + '</label></td>'
                        + '<td class="col-md-1 col-lg-1 value-right"><button class="btn-icon gray" title="Delete" onclick="tranSaleReturnTableAction(3)"><i class="fa fa-remove"></i></button></td>'
                        + '<td style="display:none">' + num + '</td>'

                $('#inputLocationID').val(item.LocationID);
                $('#inputUnitID').val(item.UnitID);
                $('#inputCurrencyID').val(item.CurrencyID);
                $('#tblTranSaleReturn tbody').append(row);
            });
        }

        $('#tblTranSaleReturn').on("click", "tbody tr", function () {
            $('#tblTranSaleReturn tr').removeClass("selected");
            $(this).addClass("selected");
            $(this).find("td:last").each(function () {
                let number = $(this).text();
                if (tranSaleReturnAction == 3) {
                    tranSaleReturnAction = 0;
                    deleteTranSaleReturn(number);
                }
                else prepareToEditTranSaleReturn(number);
            })
        })

        function prepareToEditTranSaleReturn(number) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("PrepareToEditTranSaleReturnAction", "SaleReturn")',
                data: { "number": number },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    $('#inputNumber').val(number);
                    $('#inputProductID').val(response.ProductID);
                    $('#inputLocationID').val(response.LocationID);
                    $('#inputProductName').val(response.ProductName);
                    $('#originalQuantity').val(response.InputQuantity);
                    $('#inputQuantity').val(response.Quantity);
                    $('#lblUnitName').text(response.UnitKeyword);
                    $('#inputPrice').val(response.SalePrice);
                    if (response.DisPercent != 0) $("#inputDisPercent").val(response.DisPercent + '@Resource.PercentSign');
                    else $("#inputDisPercent").val(0 + '@Resource.PercentSign');
                    $('#inputCurrencyKeyword').val(response.CurrencyKeyword);
                    isEditTranSaleReturn = true;
                    showHideTranSaleReturnAddEdit(true);
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
            });
        }

        function deleteTranSaleReturn(number) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("TranSaleReturnDeleteAction", "SaleReturn")',
                data: { "number": number },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        createTranSaleReturnData(response.List);
                        $('#lblTotalAmount').text(separatedComma(response.TotalAmount));
                        $('#inputHdnTotal').val(response.TotalAmount);
                    }

                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
            });
        }

        $('#btnReset').click(function () {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("CancelAction", "SaleReturn")',
                data: {},
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    clearTranSaleReturnControl();
                    $('#tblTranSaleReturn').find("tbody").empty();
                    $('#inputVoucherID').val("");
                    $('#lblTotalAmount').text('0');
                    $('#inputHdnTotal').val("");
                    showHideTranSaleReturnAddEdit(false);

                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
            });
        });

        $('#btnContinue').click(function () {
            let row = $('#tblTranSaleReturn tbody tr').length;
            let row2 = $("#tblTranSaleReturnByProduct tbody tr").length;
            if (row < 1 && row2<1) return;
            $("#modalRemarkTitle").text('@Resource.AddRemark');
            $("#lblRemark").text('@Resource.EnterNote');
            $('#modalRemark').modal('show');
            $('#btnRemarkEdit').css("display", "none");
            $('#btnRemarkOk').show();
        })

        $('#btnRemarkOk').click(function () {
            let row = $('#tblTranSaleReturn tbody tr').length;
            let row2 = $("#tblTranSaleReturnByProduct tbody tr").length;
            if (row < 1 && row2 < 1) return;
            //let saleId = $('#lblSaleID').val();
            let returnVoucherNo = $('#inputSearch').val();
            let userVoucherNo = $('#lblUserVoucherNo').text();
            let date = $('#inputDate').val();
            let voucherId = $('#inputVoucherID').val();
            let userId = localStorage.getItem("UserID");
            let totalAmount = $('#inputHdnTotal').val();
            let remark = $('#txtRemarkNote').val();
            let locationId = $('#inputLocationID').val();
            showLoadingIcon();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveAction", "SaleReturn")',
                data: JSON.stringify({ "returnVoucherNo": returnVoucherNo, "userVoucherNo": userVoucherNo, "date": date, "voucherId": voucherId, "userId": userId, "locationId": locationId, "totalAmount": totalAmount, "remark": remark,"isReturnByVoucher": isReturnByVoucher }),
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        showToast(1, response.ResultDefaultData.Message);
                        clearTranSaleReturnControl();
                        $('#lblUserVoucherNo').text(response.UserVoucherNo);
                        $('#tblTranSaleReturn').find("tbody").empty();
                        $('#inputVoucherID').val("");
                        $('#lblTotalAmount').text('0');
                        $('#inputHdnTotal').val("");
                        showHideTranSaleReturnAddEdit(false);
                        $('#modalRemark').modal('hide');
                        $('#inputSearch').val("");
                        $('#lblTotalItem').text('0');
                        $('#tblTranSale').find("tbody").empty();
                        $("#tblTranSaleReturnByProduct").find("tbody").empty();
                        $('#txtRemarkNote').val("");
                        clearSaleReturnByProductArea();
                    }

                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
            });
        })

        $('#btnCEdit').click(function () {
            let row = $('#tblTranSaleReturn tbody tr').length;
            let row2 = $("#tblTranSaleReturnByProduct tbody tr").length;
            if (row < 1 && row2 < 1) return;
            $("#modalRemarkTitle").text('@Resource.AddRemark');
            $("#lblRemark").text('@Resource.EnterNote');
            $('#modalRemark').modal('show');
            $('#btnRemarkEdit').show();
            $('#btnRemarkOk').css("display", "none");
        })

        $('#btnRemarkEdit').click(function () {
            let saleReturnId = $('#btnCEdit').val();
            let date = $('#inputDate').val();
            let voucherId = $('#inputVoucherID').val();
            let totalAmount = $('#inputHdnTotal').val();
            let remark = $('#txtRemarkNote').val();
            showLoadingIcon();
            $.ajax({
                type: "POST",
                url: '@Url.Action("EditAction", "SaleReturn")',
                data: JSON.stringify({
                    "saleRetunrId": saleReturnId, "date": date, "voucherId": voucherId, "totalAmount": totalAmount, "remark": remark,"isReturnByVoucher":isReturnByVoucher
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        $('#modalRemark').modal('hide');
                        responseUnSuccessful(response);
                    }
                    else {
                        window.location.href = '@Url.Action("ListSaleReturn", "SaleReturn")';
                    }

                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },

            });
        })

        function fillEditData() {
            $('#btnCEdit').val('@ViewBag.SaleReturnID');
            $('#lblUserVoucherNo').text('@ViewBag.UserVoucherNo');
            $('#inputDate').val('@ViewBag.Date');
            $('#inputVoucherID').val('@ViewBag.VoucherID');
            $('#lblTotalAmount').text(separatedComma('@ViewBag.Total'));
            $("#inputHdnTotal").val('@ViewBag.Total');
            $('#txtRemarkNote').val('@ViewBag.Remark');
            $('#inputSearch').val('@ViewBag.ReturnVoucherNo');
            let returnVoucherNo = $("#inputSearch").val();
            if (returnVoucherNo !='') {
                $("#inputLocationID").val('@ViewBag.LocationID');
                $('#originalQuantity').val('@ViewBag.TotalQuantity');
                $('#lblSaleID').val('@ViewBag.SaleID');
                showHideTranSaleReturnAddEdit(false);
                let tranSaleReturnList = JSON.parse('@Html.Raw(Json.Encode(Session["TranSaleReturnData"]))');
                createTranSaleReturnData(tranSaleReturnList);
                let tranSaleList = JSON.parse('@Html.Raw(Json.Encode(Session["TranSaleData"]))');
                let totalItem = tranSaleList.length;
                $('#lblTotalItem').text(totalItem + '@Resource.OpenParenthesis' + '@ViewBag.TotalQuantity' + '@Resource.CloseParenthesis');
                createTranSaleData(tranSaleList);
                $("#inputSearch").attr("disabled", "disabled");
                $('#tblTranSale').addClass("changecursor");
                var nodes = document.getElementById("divSale").getElementsByTagName('*');
                for (var i = 0; i < nodes.length; i++) {
                    nodes[i].disabled = true;
                }
                $("#divReturnByProduct").css("display", 'none');
                $("#divReturnByVoucher").css("display", 'block');
                $("#divTranSaleReturn").css("display", "block");
                $("#divTranSaleReturnByProduct").css("display", "none");
                isReturnByVoucher = true;
            }
            else
            {
                showHideTranSaleReturnAddEditByProduct(false);
                let tranSaleReturnList = JSON.parse('@Html.Raw(Json.Encode(Session["TranSaleReturnByProductData"]))');
                createTranSaleReturnByProductData(tranSaleReturnList);
                $("#divReturnByProduct").css("display", 'block');
                $("#divReturnByVoucher").css("display", 'none');
                $("#divTranSaleReturn").css("display", "none");
                $("#divTranSaleReturnByProduct").css("display", "block");
                $("#rdoReturnByProduct").prop('checked', true);
                if (isMultiUnit) createDefaultCurrency();
                if (isMultiCurrency) createDefaultUnit();
                $("#inputSearch").prop("disabled", true);
                isReturnByVoucher = false;
            }           
            showHideMainButton(true);           
            $("input[name='rdoReturnType']").prop("disabled", true);
        }

        $('#btnCancel').click(function () {
            window.location.href = '@Url.Action("SaleReturn", "SaleReturn")?userId=' + userId;
        })

        function clearTranSaleReturnControl() {
            $("#inputProductID").val("");
            $('#inputProductName').val("");
            $('#inputQuantity').val("");
            $('#lblUnitName').text("UNIT");
            $('#inputPrice').val("");
            $("#inputDisPercent").val("");
            $("#inputNumber").val("");
        }

        function showHideTranSaleReturnAddEdit(isEdit) {
            if (isEdit) {
                $('#btnAdd').css("display", "none");
                $('#btnEdit').show();
            }
            else {
                $('#btnAdd').show();
                $('#btnEdit').css("display", "none");
            }
        }
        function showHideTranSaleReturnAddEditByProduct(isEdit) {
            if (isEdit) {
                $('#btnAddReturnProduct').css("display", "none");
                $('#btnEditReturnProduct').css("display", "block");
            }
            else {
                $('#btnAddReturnProduct').css("display", "block");
                $('#btnEditReturnProduct').css("display", "none");
            }
        }

        function showHideMainButton(isEdit) {
            if (isEdit) {
                $('#btnReset').css("display", "none");
                $('#btnCancel').show();
                $('#btnContinue').css("display", "none");
                $('#btnCEdit').show();
            }
            else {
                $('#btnReset').show();
                $('#btnCancel').css("display", "none");
                $('#btnContinue').show();
                $('#btnCEdit').css("display", "none");
            }
        }

        $("#inputSearchReturnProduct").keydown(function (event) {
            if (event.which === 13) {
                let keyword = $("#inputSearchReturnProduct").val();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetProductByKeywordAction","SaleReturn")',
                    data: { "keyword": keyword },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (response.length == 0)
                            showToast(0, '@Inventory.Common.AppConstants.Message.NoProduct');
                        else {
                            createSearchProductData(response);
                            $('#modalSearchProduct').modal('show');
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    }
                })
            }
        })
        function createSearchProductData(response) {
            $("#tblSearchProduct").find("tbody").empty();
            $.each(response, function (i, item) {
                var rows = "<tr class='row table-item' style='cursor:pointer;'>"
                    + "<td style='display:none;'>" + item.ProductID + "</td>"
                    + '<td class="col-md-8 col-lg-8"><label class="control-label mb-0 text-overflow">' + item.ProductName + '</label></td>'
                    + '<td class="col-md-4 col-lg-4 value-right"><label class="control-label mb-0">' + separatedComma(item.SalePrice) + '</label></td>'
                    + "</tr>";
                $('#tblSearchProduct tbody').append(rows);
            });
        }
        $("#tblSearchProduct").on("click", "tbody tr", function (event) {
            $(this).find("td:first").each(function () {
                let productId = $(this).text();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("SearchProductClickAction", "SaleReturn")',
                    data: { "productID": productId, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.IsRequestSuccess)
                            redirectToLogin();
                        else {
                            $("#inputReturnNumber").val(response.Product.ProductID);
                            $("#inputReturnProductID").val(response.Product.ProductID);
                            $("#inputReturnProductCode").val(response.Product.Code);
                            $("#inputReturnProductName").val(response.Product.ProductName);
                            $("#inputReturnProductQuantity").val('1');
                            $("#inputReturnProductPrice").val(response.Product.SalePrice);
                            if (response.DisPercent != 0) $("#inputReturnProductDisPercent").val(response.Product.DisPercent);
                            else $("#inputReturnProductDisPercent").val("");
                            if (isMultiUnit) createUnitData(response);
                            if (isMultiCurrency) createCurrencyData(response);
                            showHideTranSaleReturnAddEditByProduct(false);
                            $('#modalSearchProduct').modal('hide');
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    }
                });
            })
        });
        $("#inputReturnProductCode").keydown(function (event) {
            if (event.which === 13) {
                let productCode = $("#inputReturnProductCode").val();
                showLoadingIcon();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetProductByCodeAction", "SaleReturn")',
                    data: { "productCode": productCode, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        hideLoadingIcon();
                        if (!response.ResultDefaultData.IsRequestSuccess) {
                            responseUnSuccessful(response);
                        }
                        else {
                            if (!response.IsExistProduct)
                                showToast(0, '@Inventory.Common.AppConstants.Message.NoProductByCode');
                            else {
                                $("#inputReturnNumber").val(response.Product.ProductID);
                                $("#inputReturnProductID").val(response.Product.ProductID);
                                $("#inputReturnProductName").val(response.Product.ProductName);
                                $("#inputReturnProductQuantity").val('1');
                                $("#inputReturnProductPrice").val(response.Product.SalePrice);
                                if (response.DisPercent != 0) $("#inputReturnProductDisPercent").val(response.Product.DisPercent);
                                else $("#inputReturnProductDisPercent").val("");
                                if (isMultiUnit) createUnitData(response);
                                if (isMultiCurrency) createCurrencyData(response);
                                showHideTranSaleReturnAddEditByProduct(false);
                            }
                        }
                    },
                    failure: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    },
                    error: function (response) {
                        hideLoadingIcon();
                        alert(response.responseText);
                    }
                })
            }
        })
        $("#inputReturnProductQuantity").keydown(function (event) {
            if (event.which === 13) {
                addOrEditTranSaleReturnByProduct(isEditTranSaleReturnByProduct);
            }
        })
        $("#inputReturnProductPrice").keydown(function (event) {
            if (event.which === 13) {
                addOrEditTranSaleReturnByProduct(isEditTranSaleReturnByProduct);
            }
        })
        $("#btnAddReturnProduct").click(function (e) {
            addOrEditTranSaleReturnByProduct(isEditTranSaleReturnByProduct);
        });
        $("#btnEditReturnProduct").click(function (e) {
            addOrEditTranSaleReturnByProduct(isEditTranSaleReturnByProduct);
        });
        function addOrEditTranSaleReturnByProduct(isEdit) {
            let productId = $("#inputReturnProductID").val();
            if (productId.length == 0 || productId == 0) return false;
            let quantity = $("#inputReturnProductQuantity").val();
            if (quantity == 0 || quantity.length == 0) {
                $("#inputReturnProductQuantity").focus();
                return false;
            }
            let price = $("#inputReturnProductPrice").val();
            if (price.length == 0) {
                $("#inputReturnProductPrice").focus();
                return false;
            }
            let disPercent, unitId, currencyId, unitKeyword, currencyKeyword, isItemFOC = false;

            let productCode = $("#inputReturnProductCode").val();
            let productName = $("#inputReturnProductName").val();
            disPercent = $("#inputReturnProductDisPercent").val();
            if (disPercent.length == 0) disPercent = 0;
            if (isMultiUnit == "True") {
                unitId = $('#divddlUnit option:selected').val();
                unitKeyword = $('#divddlUnit option:selected').text();
            }
            if (isMultiCurrency == "True") {
                currencyId = $('#divddlCurrency option:selected').val();
                currencyKeyword = $('#divddlCurrency option:selected').text();
            }
            if ($('#chkItemFOC').is(":checked")) isItemFOC = true;
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("TranSaleReturnByProductAddEditAction", "SaleReturn")',
                data: {
                    "productID": productId, "productName": productName, "code": productCode, "quantity": quantity, "salePrice": price,
                    "disPercent": disPercent, "unitId": unitId, "unitKeyword": unitKeyword, "currencyId": currencyId, "currencyKeyword": currencyKeyword,
                    "isEdit": isEdit, "isItemFOC": isItemFOC
                },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.IsRequestSuccess)
                        redirectToLogin();
                    else {
                        createTranSaleReturnByProductData(response.LstTranSaleReturn);
                        $("#lblTotalAmount").text(separatedComma(response.SubTotal));
                        $("#inputHdnTotal").val(response.SubTotal);
                        clearSaleReturnByProductArea();
                        $('#inputReturnProductPrice').prop("disabled", false);
                        showHideTranSaleReturnAddEditByProduct(false);
                        isEditTranSaleReturnByProduct = false;
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            })
        }
        function clearSaleReturnByProductArea() {
            $("#inputReturnProductID").val("");
            $("#inputReturnProductName").val("");
            $("#inputReturnProductQuantity").val("");
            $("#inputReturnProductPrice").val("");
            $("#inputReturnProductDisPercent").val("");
            $("#inputReturnProductCode").val("");
            $("#chkItemFOC").prop('checked', false);
        }
        function createTranSaleReturnByProductData(lstTranSaleReturn) {
            $("#tblTranSaleReturnByProduct").find("tbody").empty();
            $.each(lstTranSaleReturn, function (i, item) {
                if (item.UnitKeyword == null) item.UnitKeyword = '';
                if (item.CurrencyKeyword == null) item.CurrencyKeyword = '';
                let row = '<tr class="row tran-table-item-row">'
                       + '<td style="display:none;">' + item.ProductID + '</td>'
                       + '<td class="col-md-4 col-lg-4"><label class="control-label mb-0 text-link text-overflow">' + item.ProductName + '</label></td>'
                       + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + item.Quantity + '<span class="control-span-sm">&nbsp;' + item.UnitKeyword + '</span></label></td>'
                       + '<td class="col-md-2 col-lg-2"><label class="control-label mb-0">' + separatedComma(item.SalePrice) + '<span class="control-span-sm">&nbsp;' + item.CurrencyKeyword + '</span></label></td>'
                       + '<td class="col-md-1 col-lg-1"><label class="control-label mb-0">' + separatedComma(item.Discount) + '</label></td>'
                       + '<td class="col-md-2 col-lg-2 value-right"><label class="control-label mb-0">' + separatedComma(item.Amount) + '</label></td>'
                       + '<td class="col-md-1 col-lg-1 value-right"><button class="btn-icon gray" title="Delete" onclick="tranSaleReturnByProductTableAction(3)"><i class="fa fa-remove"></i></button></td>'
                       + '<td style="display:none;">' + item.ProductID + '</td>'
                       + '</tr>';
                $('#tblTranSaleReturnByProduct tbody').append(row);
            })
        }
        $('#chkItemFOC').change(function () {
            let productId = $('#inputReturnProductID').val();
            if (productId == "") return;
            if (this.checked) {
                prevSalePrice = $('#inputReturnProductPrice').val();
                $('#inputReturnProductPrice').val('0');
                $('#inputReturnProductPrice').prop("disabled", true);
            }
            else {
                $('#inputReturnProductPrice').val(prevSalePrice);
                $('#inputReturnProductPrice').prop("disabled", false);
            }
        });
        $("#tblTranSaleReturnByProduct").on("click", "tbody tr", function (event) {
            $('#tblTranSaleReturnByProduct tr').removeClass("selected");
            $(this).addClass("selected");
            $(this).find("td:last").each(function () {
                let number = $(this).text();
                if (tranSaleReturnByProductAction == 3) {
                    tranSaleReturnByProductAction = 0;
                    deleteTranSaleReturnByProduct(number);
                } else {
                    prepareToEditTranSaleReturnByProduct(number);
                }
            })
        });
        function deleteTranSaleReturnByProduct(number) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("TranSaleReturnByProductDeleteAction", "SaleReturn")',
                data: { "number": number },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.IsRequestSuccess)
                        redirectToLogin();
                    else {
                        createTranSaleReturnByProductData(response.LstTranSaleReturn);
                        $("#lblTotalAmount").text(separatedComma(response.SubTotal));
                        $("#inputHdnTotal").val(response.SubTotal);
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        }
        function prepareToEditTranSaleReturnByProduct(number) {
            showLoadingIcon();
            $.ajax({
                type: "GET",
                url: '@Url.Action("PrepareToEditTranSaleReturnByProductAction", "SaleReturn")',
                data: { "number": number, "isMultiUnit": isMultiUnit, "isMultiCurrency": isMultiCurrency },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    hideLoadingIcon();
                    if (!response.ResultDefaultData.IsRequestSuccess) {
                        responseUnSuccessful(response);
                    }
                    else {
                        showHideTranSaleReturnAddEditByProduct(true);
                        $("#inputReturnProductID").val(response.Product.ProductID);
                        $("#inputReturnProductCode").val(response.Product.ProductCode);
                        $("#inputReturnProductName").val(response.Product.ProductName);
                        $("#inputReturnProductQuantity").val(response.Product.Quantity);
                        $("#inputReturnProductPrice").val(response.Product.SalePrice);
                        $("#inputReturnProductDisPercent").val(response.Product.DiscountPercent);
                        if (isMultiUnit == "True") {
                            createUnitData(response);
                            $("#ddlUnit").val(response.Product.UnitID);
                        }
                        if (isMultiCurrency == "True") {
                            createCurrencyData(response);
                            $("#ddlCurrency").val(response.Product.CurrencyID);
                        }
                        if (response.Product.IsFOC == true) {
                            $('#inputReturnProductPrice').prop("disabled", true);
                            $("#chkItemFOC").prop('checked', true);
                        }
                        else $("#chkItemFOC").prop('checked', false);
                        isEditTranSaleReturnByProduct = true;
                    }
                },
                failure: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                },
                error: function (response) {
                    hideLoadingIcon();
                    alert(response.responseText);
                }
            });
        }


    }) // Jquery

    function tranSaleReturnTableAction(value) {
        tranSaleReturnAction = value;
    }
    function tranSaleReturnByProductTableAction(value) {
        tranSaleReturnByProductAction = value;
    }
    function createUnitData(response) {
        let unit;
        $("#ddlUnit").html("");
        for (var i = 0; i < response.LstUnit.length; i++) {
            unit += '<option value="' + response.LstUnit[i].UnitID + '">' + response.LstUnit[i].Keyword + '</option>';
        }
        $("#ddlUnit").append(unit);
    }
    function createCurrencyData(response) {
        let currency;
        $("#ddlCurrency").html("");
        for (var i = 0; i < response.LstCurrency.length; i++) {
            currency += '<option value="' + response.LstCurrency[i].CurrencyID + '">' + response.LstCurrency[i].Keyword + '</option>';
        }
        $("#ddlCurrency").append(currency);
    }

</script>


